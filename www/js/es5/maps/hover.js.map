{"version":3,"sources":["hover.js"],"names":["System","register","_export","_context","main","Article","$","Backbone","etc","options","state","mousemove","ImageHoverView","PostPreview","HoverPostView","ltarget","postHover","setters","execute","require","posts","Model","View","extend","initialize","_this","this","listenTo","model","check","reply","$el","empty","event","get","$target","target","is","hasClass","children","remove","src","closest","attr","isWebm","test","autoplay","loop","appendTo","args","parentNum","redirect","render","addClass","update","num","getID","el","_this2","m","text","match","post","targetPos","offset","previewView","one","stopListening","find","filter","includes","each","css","position","hide","document","body","append","w","width","h","height","detach","show","$w","window","l","left","scrollLeft","t","top","scrollTop","overflowR","innerWidth","Math","max","undefined","isMobile","defer","$doc","on","e","set","hover","getElementById"],"mappings":"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","file":"hover.js","sourcesContent":["/*\n * Hover previews\n */\n\nlet main = require('./main'),\n\t{Article} = main.posts,\n\t{$, Backbone, etc, options, state} = main;\n\n// Centralised mousemove target tracking\n/*Logging only the target isn't a option because change:target doesn't seem\n to fire in some cases where the target is too similar for example changing\n between two post links (>>XXX) directly\n */\nconst mousemove = new Backbone.Model();\n\nlet ImageHoverView = Backbone.View.extend({\n\tinitialize() {\n\t\tthis.listenTo(this.model,'change:event', this.check);\n\t\tmain.reply('imager:clicked', () => this.$el.empty());\n\t},\n\tcheck(model, event) {\n\t\t// Disabled in options\n\t\tif (!options.get('imageHover'))\n\t\t\treturn;\n\t\tvar $target = $(event.target);\n\t\tif (!$target.is('img') || $target.hasClass('expanded'))\n\t\t\treturn this.$el.children().remove(\"img,video\");\n\t\tconst src = $target.closest('a').attr('href'),\n\t\t\tisWebm = /\\.webm$/.test(src);\n\t\t// Nothing to preview for PDF or MP3\n\t\tif (/\\.pdf$/.test(src)\n\t\t\t|| /\\.mp3$/.test(src)\n\t\t\t|| (isWebm && !options.get('webmHover'))\n\t\t)\n\t\t\treturn this.$el.empty();\n\t\t$(isWebm ? '<video/>' : '<img/>', {\n\t\t\tsrc: src,\n\t\t\tautoplay: true,\n\t\t\tloop: true\n\t\t}).appendTo(this.$el.empty());\n\t}\n});\n\nlet PostPreview = Article.extend({\n\tinitialize(args) {\n\t\tthis.parentNum = args.parentNum;\n\t\tthis.listenTo(this.model, 'dispatch', this.redirect)\n\t\t\t.render().$el.addClass('preview');\n\t\tthis.update();\n\t},\n\tupdate() {\n\t\tif (!this.num)\n\t\t\tthis.num = etc.getID(this.el);\n\t\tpostHover.render(this.$el, this.parentNum);\n\t}\n});\n\nlet HoverPostView = Backbone.View.extend({\n\tinitialize() {\n\t\tthis.listenTo(this.model,'change:event', this.check);\n\t},\n\tcheck(model, event) {\n\t\tlet $target = $(event.target);\n\t\tif (!$target.is('a.history'))\n\t\t\treturn;\n\t\tconst m = $target.text().match(/^>>(\\d+)/);\n\t\tif (!m)\n\t\t\treturn;\n\t\tlet post = state.posts.get(m[1]);\n\t\tif (!post)\n\t\t\treturn;\n\t\tthis.targetPos = $target.offset();\n\t\tthis.previewView = new PostPreview({\n\t\t\tmodel: post,\n\t\t\tparentNum: etc.getID(event.target)\n\t\t});\n\t\t$target.one('mouseleave click', () => this.remove());\n\t},\n\tremove() {\n\t\tif (!this.previewView)\n\t\t\treturn;\n\t\tthis.targetPos = null;\n\t\tthis.previewView.remove();\n\t\tthis.stopListening(this.previewView);\n\t\tthis.$el.children().remove('.preview');\n\t\tthis.previewView = null;\n\t},\n\trender($el, num) {\n\t\t// Striped underline links from the parent post\n\t\t$el.find('a.history')\n\t\t\t.filter(function () {\n\t\t\t\treturn this.text.includes('>>' + num);\n\t\t\t})\n\t\t\t.each(function () {\n\t\t\t\t$(this).addClass('referenced');\n\t\t\t});\n\t\t$el.css(this.position($el)).appendTo(this.$el.empty());\n\t},\n\tposition($el) {\n\t\t$el.hide();\n\t\t$(document.body).append($el);\n\t\tvar w = $el.width();\n\t\tvar h = $el.height();\n\t\t$el.detach().show();\n\n\t\tvar $w = $(window);\n\t\tvar l = this.targetPos.left -$w.scrollLeft();\n\t\tvar t = this.targetPos.top -$w.scrollTop()-h-17;\n\n\t\t//If it get cut at the top, put it below the link\n\t\tif(t<0)\n\t\t\tt+=h+34;\n\n\t\t//if it gets cut to the right push it to the left.\n\t\tvar overflowR = l+w-$w.innerWidth();\n\t\tif(overflowR>-30)\n\t\t\tl = Math.max(0,l-overflowR-30);\n\n\t\treturn {left: l,top: t};\n\t}\n});\n\nlet ltarget, postHover;\nif (!main.isMobile) {\n\tmain.defer(function() {\n\t\tmain.$doc.on('mousemove', function(e) {\n\t\t\tif(e.target!=ltarget) {\n\t\t\t\tmousemove.set('event', e);\n\t\t\t\tltarget= e.target;\n\t\t\t}\n\t\t});\n\t\tlet hover = document.getElementById('hover_overlay');\n\t\tnew ImageHoverView({\n\t\t\tmodel: mousemove,\n\t\t\tel: hover\n\t\t});\n\t\tpostHover = new HoverPostView({\n\t\t\tmodel: mousemove,\n\t\t\tel: hover\n\t\t});\n\t});\n}\n"],"sourceRoot":"/source/"}