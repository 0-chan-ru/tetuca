{"version":3,"sources":["collection.js"],"names":["System","register","_export","_context","_classCallCheck","instance","Constructor","TypeError","Model","_createClass","Collection","setters","_model2","execute","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","models","this","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_model","value","add","err","model","id","collection","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fn"],"mappings":"AAAA,YAAaA,QAAOC,UAAU,WAAW,SAASC,EAAQC,GAA4C,QAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAA5I,GAAIC,GAAMC,EAAaC,CAA4J,QAAQC,SAAS,SAASC,GAASJ,EAAMI,EAAAA,aAAmBC,QAAQ,WAAWJ,EAAa,WAAW,QAASK,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,SAAWF,KAAWA,EAAWG,UAAS,GAAKC,OAAOC,eAAeT,EAAOI,EAAWM,IAAIN,IAAc,MAAO,UAASb,EAAYoB,EAAWC,GAAuI,MAAvHD,IAAWZ,EAAiBR,EAAYsB,UAAUF,GAAeC,GAAYb,EAAiBR,EAAYqB,GAAoBrB,MAAkBI,EAAW,WAAW,QAASA,GAAWmB,GAAwD,GAAhDzB,EAAgB0B,KAAKpB,GAAYoB,KAAKD,UAAaA,EAAO,CAAC,GAAIE,IAA0B,EAASC,GAAkB,EAAUC,EAAeC,MAAU,KAAI,IAAI,GAY7/BC,GAZigCC,EAYjgCP,EAAAQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAA,CAAA,GAAAU,GAAAN,EAAAO,KAAAZ,MAAAa,IAAAF,IAAA,MAAAG,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,QAAA,KAAAb,GAAAK,EAAAA,WAAAA,EAAAA,YAAA,QAAA,GAAAJ,EAAA,KAAAC,MAoBJ,MApBIxB,GAAAC,IAAAe,IAAA,MAAAiB,MAAA,SAAAG,GAAAf,KAAAD,OAAAgB,EAAAC,IAAAD,EAAAA,EAAAE,WAAAjB,QAAAL,IAAA,SAAAiB,MAAA,SAAAG,SAAAf,MAAAD,OAAAgB,EAAAC,UAAAD,GAAAE,cAAAtB,IAAA,QAAAiB,MAAA,WAAA,GAAAM,IAAA,EAAAC,GAAA,EAAAC,EAAAhB,MAAA,KAAA,IAAA,GAoBJiB,GApBIC,EAoBJtB,KAAKD,OAALQ,OAAAC,cAAAU,GAAAG,EAAAC,EAAAb,QAAAC,MAAAQ,GAAA,EAAA,CAAA,GAAAF,GAAAK,EAAAT,YAAAZ,MAAAD,OAAAiB,GAAAC,YAAA,MAAAH,GAAAK,GAAA,EAAAC,EAAAN,EAAA,QAAA,KAAAI,GAAAI,EAAAA,WAAAA,EAAAA,YAAA,QAAA,GAAAH,EAAA,KAAAC,IAAApB,KAAAD,aAAAJ,IAAA,UAAAiB,MAAA,SAAAW,GAAA,IAAA,GAAAP,KAAAhB,MAAAD,OAAAwB,EAAAvB,KAAAD,OAAAiB,QAAApC,KAAAR,EAAA,UAAAQ","file":"collection.js","sourcesContent":["/* @flow */\nimport Model from './model'\n\n// Holds a collection of models\nexport default class Collection {\n\t// Flow can't seem to make sense of a map of imported types.\n\t// Thus 'any' type.\n\tmodels :any = {};\n\n\t// Creates a new Collection instance\n\tconstructor(models :Array<Model>) {\n\t\tif (models) {\n\t\t\tfor (let model of models) {\n\t\t\t\tthis.add(model)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add model to collection\n\tadd(model :Model) {\n\t\tthis.models[model.id] = model\n\t\tmodel.collection = this\n\t}\n\n\t// Remove model from the collection\n\tremove(model :Model) {\n\t\tdelete this.models[model.id]\n\t\tdelete model.collection\n\t}\n\n\t// Remove all models from collection\n\tclear() {\n\t\tfor (let id of this.models) {\n\t\t\tdelete this.models[id].collection\n\t\t}\n\t\tthis.models = {}\n\t}\n\n\t/**\n\t * Runs the suplied function for each model in the collection\n\t * @param {string} method - Method to be called\n\t * @param {...*=} args - Arguments to pass\n\t */\n\tforEach(fn :(model :Model) => void) {\n\t\tfor (let id in this.models) {\n\t\t\tfn(this.models[id])\n\t\t}\n\t}\n}\n"],"sourceRoot":"/source/"}