{"version":3,"sources":["loop.js"],"names":["System","register","_export","_context","reRenderImages","main","state","page","get","show","options","oneeSama","workMode","document","queryAll","forEach","el","style","display","follow","getImages","image","model","dispatch","func","posts","each","toggleSpoilers","spoiler","toggleAutoGIF","ext","toggleAnonymisation","source","toggle","command","_model$attributes","attributes","name","trip","util","setters","execute","require","on","change:thumbs","change:spoilers","change:autogif","change:anonymise","workModeTOG","reply"],"mappings":"AAAA,YAAaA,QAAOC,YAAY,SAASC,EAAQC,GAiBjD,QAASC,KACLC,EAAKC,MAAMC,KAAKC,IAAI,YAAW,WAEjC,GAAMC,GAAgC,SAAzBC,EAASF,IAAI,WAAuBH,EAAKM,SAASC,SAAc,OAAH,EAC1EC,UAASC,SAAS,aAAaC,QAAQ,SAAAC,GAAA,MAAMA,GAAGC,MAAMC,QAAQT,OAE9DU,EAAO,WAAA,MAAMC,GAAU,SAACC,EAAOC,GAAR,MACtBD,IAASC,EAAMC,SAAS,cAAeF,OAP1C,QAUSD,GAAUI,GAClBC,EAAMC,KAAK,SAAAJ,GAAA,MAASE,GAAKF,EAAMd,IAAI,SAAUc,KAD9C,QAISK,KACRR,EAAO,WAAA,MAAMC,GAAU,SAACC,EAAOC,GAAR,MACtBD,IAASA,EAAMO,SAAWN,EAAMC,SAAS,cAAeF,OAF1D,QAMSQ,KACRV,EAAO,WAAA,MAAMC,GAAU,SAACC,EAAOC,GAAR,MACtBD,IAAuB,SAAdA,EAAMS,KAAkBR,EAAMC,SAAS,cAAeF,OAFjE,QAKSU,GAAoBC,EAAQC,GACpCd,EAAO,WACN,GAAMe,GAAUD,EAAS,YAAc,YAD3BR,GAENC,KAAK,SAASJ,GAAO,GAAAa,GACLb,EAAMc,WAApBC,EAAAF,EAAAE,KAAMC,EAAAH,EAAAG,MACTD,GAAQC,IACXhB,EAAMC,SAASW,OAhDwC,GAAI7B,GAAKkC,EAAKpB,EAAOT,EAAQC,EAASc,CA0CjG,QAAAe,WAAAC,QAAA,WApCMpC,EAAOqC,QAAQ,UACnBH,EAAmClC,EAAnCkC,KAAMpB,EAA6Bd,EAA7Bc,OAAQT,EAAqBL,EAArBK,QAASC,EAAYN,EAAZM,SACvBc,EAASpB,EAAKC,MAAdmB,MAEFf,EAAQiC,IACPC,gBAAiBxC,EACjByC,kBAAmBlB,EACnBmB,iBAAkBjB,EAClBkB,mBAAoBhB,EACpBiB,YAAe5C,IAqChBC,EAAK4C,MAAM,iBAAkB,WAAA,MAC5BvC,GAAQF,IAAI,cAAgBuB,EAAoB,MAAM","file":"loop.js","sourcesContent":["/*\n It is not very efficient to spam liteners to the options object. This\n module loops through the post models and calls the appropriate methods in\n batch.\n */\n\nconst main = require('./main'),\n\t{util, follow, options, oneeSama} = main,\n\t{posts} = main.state;\n\noptions.on({\n\t'change:thumbs': reRenderImages,\n\t'change:spoilers': toggleSpoilers,\n\t'change:autogif': toggleAutoGIF,\n\t'change:anonymise': toggleAnonymisation,\n\t'workModeTOG': reRenderImages\n});\nfunction reRenderImages() {\n\tif(main.state.page.get('catalog')){\n\t\t//quick render, because we don't have models in the catalog\n\t\tconst show = (options.get(\"thumbs\")!=='hide' && !main.oneeSama.workMode)? '':'none';\n\t\tdocument.queryAll(\".expanded\").forEach(el => el.style.display=show);\n\t}else\n\t\tfollow(() => getImages((image, model) =>\n\t\t\timage && model.dispatch('renderImage', image)));\n}\n\nfunction getImages(func) {\n\tposts.each(model => func(model.get('image'), model));\n}\n\nfunction toggleSpoilers() {\n\tfollow(() => getImages((image, model) =>\n\t\timage && image.spoiler && model.dispatch('renderImage', image)));\n}\n\n// Toggle animated GIF thumbnails\nfunction toggleAutoGIF() {\n\tfollow(() => getImages((image, model) =>\n\t\timage && image.ext === '.gif' && model.dispatch('renderImage', image)));\n}\n\nfunction toggleAnonymisation(source, toggle) {\n\tfollow(() => {\n\t\tconst command = toggle ? 'anonymise' : 'renderName';\n\t\tposts.each(function(model) {\n\t\t\tconst {name, trip} = model.attributes;\n\t\t\tif (name || trip)\n\t\t\t\tmodel.dispatch(command);\n\t\t});\n\t});\n}\nmain.reply('loop:anonymise', () =>\n\toptions.get('anonymise') && toggleAnonymisation(null, true));\n"],"sourceRoot":"/source/"}