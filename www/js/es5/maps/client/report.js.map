{"version":3,"sources":["client/report.js"],"names":["System","register","_export","_context","main","$","$script","_","Backbone","common","lang","pubKey","captchaTimeout","repLang","reports","panel","Report","ReportPanel","setters","execute","require","config","RECAPTCHA_PUBLIC_KEY","undefined","Model","extend","defaults","status","hideAfter","request_new","_this","this","Recaptcha","create","theme","callback","set","get","clearTimeout","setTimeout","did_report","_this2","id","trigger","View","tagName","className","events","submit","click .close","click .hideAfter","initialize","$captcha","$message","$submit","type","val","$hideAfter","class","checked","model","$hideLabel","append","num","$el","post","oneeSama","postRef","window","x_csrf","remove","listenTo","change:error","error_changed","change:status","status_changed","destroy","render","send","REPORT_POST","parseInt","get_challenge","get_response","text","prop","toggle","reporting","report","contains","msg","submitted","setup","toggleClass","focus","hide_after_changed","e","target","focus_response_field","prototype","call","reply","url","appendTo","error","loadError","dispatcher"],"mappings":"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","file":"client/report.js","sourcesContent":["/*\n Report posts you don't like\n */\n\nconst main = require('./main'),\n\t{$, $script, _, Backbone, common, lang} = main;\n\n// TODO: Rewrite this and move to API v2\n\nconst pubKey = main.config.RECAPTCHA_PUBLIC_KEY,\n\tcaptchaTimeout = 5 * 60 * 1000,\n\trepLang = lang.reports,\n\treports = {};\nlet panel;\n\nlet Report = Backbone.Model.extend({\n\tdefaults: {\n\t\tstatus: 'setup',\n\t\thideAfter: true\n\t},\n\trequest_new() {\n\t\tRecaptcha.create(pubKey, 'captcha', {\n\t\t\ttheme: 'clean',\n\t\t\tcallback: () => this.set('status', 'ready')\n\t\t});\n\n\t\tif (this.get('timeout'))\n\t\t\tclearTimeout(this.get('timeout'));\n\n\t\tthis.set('timeout', setTimeout(() => {\n\t\t\tthis.set('timeout', 0);\n\t\t\tthis.request_new();\n\t\t}, captchaTimeout));\n\t},\n\tdid_report() {\n\t\tdelete reports[this.id];\n\t\tif (this.get('timeout')) {\n\t\t\tclearTimeout(this.get('timeout'));\n\t\t\tthis.set('timeout', 0);\n\t\t}\n\n\t\tsetTimeout(() => this.trigger('destroy'), 1500);\n\n\t\tif (this.get('hideAfter'))\n\t\t\tthis.get('post').set('hide', true);\n\t}\n});\n\nvar ReportPanel = Backbone.View.extend({\n\tid: 'report-panel',\n\ttagName: 'form',\n\tclassName: 'modal',\n\tevents: {\n\t\tsubmit: 'submit',\n\t\t'click .close': 'remove',\n\t\t'click .hideAfter': 'hide_after_changed'\n\t},\n\tinitialize() {\n\t\tthis.$captcha = $('<div id=\"captcha\"/>');\n\t\tthis.$message = $('<div class=\"message\"/>');\n\t\tthis.$submit = $('<input>', {\n\t\t\ttype: 'submit',\n\t\t\tval: 'Report'\n\t\t});\n\t\tlet $hideAfter = $('<input>', {\n\t\t\tclass: 'hideAfter',\n\t\t\ttype: 'checkbox',\n\t\t\tchecked: this.model.get('hideAfter')\n\t\t});\n\t\tlet $hideLabel = $('<label>and hide</label>').append($hideAfter);\n\n\t\tconst num = this.model.get('post').get('num');\n\n\t\tthis.$el.append(\n\t\t\trepLang.post + ' ',\n\t\t\tmain.oneeSama.postRef(num),\n\t\t\t'<a class=\"close\" href=\"#\">x</a>',\n\t\t\tthis.$message,\n\t\t\tthis.$captcha,\n\t\t\tthis.$submit,\n\t\t\t' ',\n\t\t\t$hideLabel\n\t\t);\n\n\t\t/* HACK */\n\t\tif (window.x_csrf) {\n\t\t\tthis.model.set('hideAfter', false);\n\t\t\t$hideLabel.remove();\n\t\t}\n\n\t\tthis.listenTo(this.model, {\n\t\t\t'change:error': this.error_changed,\n\t\t\t'change:status': this.status_changed,\n\t\t\tdestroy: this.remove\n\t\t});\n\t},\n\trender() {\n\t\tthis.error_changed();\n\t\tthis.status_changed();\n\t\treturn this;\n\t},\n\tsubmit() {\n\t\tif (this.model.get('status') != 'ready')\n\t\t\treturn false;\n\t\tmain.send([\n\t\t\tcommon.REPORT_POST,\n\t\t\tparseInt(this.model.get('post').get('num'), 10),\n\t\t\tRecaptcha.get_challenge(),\n\t\t\tRecaptcha.get_response()\n\t\t]);\n\t\tthis.model.set('status', 'reporting');\n\t\treturn false;\n\t},\n\terror_changed() {\n\t\tthis.$message.text(this.model.get('error'));\n\t},\n\tstatus_changed() {\n\t\tconst status = this.model.get('status');\n\t\tthis.$submit\n\t\t\t.prop('disabled', status != 'ready')\n\t\t\t.toggle(status !== 'done')\n\t\t\t.val(status === 'reporting' ? repLang.reporting : lang.report);\n\t\tthis.$captcha.toggle(\n\t\t\t_.contains(['ready', 'reporting', 'error'], status)\n\t\t);\n\t\tif (status === 'done')\n\t\t\tthis.$('label').remove();\n\n\t\tlet msg;\n\t\tif (status === 'done')\n\t\t\tmsg = repLang.submitted;\n\t\telse if (status == 'setup')\n\t\t\tmsg = repLang.setup;\n\t\telse if (status == 'error'\n\t\t\t|| (status == 'ready' && this.model.get('error')))\n\t\t\t\tmsg = 'E';\n\n\t\tthis.$message.text(msg === 'E' ? this.model.get('error') : msg);\n\t\tthis.$message.toggle(!!msg).toggleClass('error', msg == 'E');\n\n\t\t// not strictly view logic, but only relevant when visible\n\t\tif (status == 'ready')\n\t\t\tthis.focus();\n\t\telse if (status == 'done')\n\t\t\tthis.model.did_report();\n\t\telse if (status == 'error')\n\t\t\tthis.model.request_new();\n\t},\n\thide_after_changed(e) {\n\t\tthis.model.set('hideAfter', e.target.checked);\n\t},\n\tfocus() {\n\t\tRecaptcha.focus_response_field();\n\t},\n\tremove() {\n\t\tBackbone.View.prototype.remove.call(this);\n\t\tif (panel === this) {\n\t\t\tpanel = null;\n\t\t\tRecaptcha.destroy();\n\t\t}\n\t\treturn false;\n\t}\n});\n\nmain.reply('report', function(post) {\n\tconst url = 'https://www.google.com/recaptcha/api/js/recaptcha_ajax.js';\n\t$script(url, function () {\n\t\tconst num = post.get('num');\n\t\tlet model = reports[num];\n\t\tif (!model) {\n\t\t\treports[num] = model = new Report({\n\t\t\t\tid: num,\n\t\t\t\tpost: post\n\t\t\t});\n\t\t}\n\t\tif (panel) {\n\t\t\tif (panel.model === model) {\n\t\t\t\tpanel.focus();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpanel.remove();\n\t\t}\n\t\tpanel = new ReportPanel({model: model});\n\t\tpanel.render().$el.appendTo('body');\n\t\tif (window.Recaptcha)\n\t\t\tmodel.request_new();\n\t\telse {\n\t\t\tmodel.set({\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: repLang.loadError\n\t\t\t});\n\t\t}\n\t});\n});\n\nmain.dispatcher[common.REPORT_POST] = function(msg) {\n\tconst report = reports[msg[0]];\n\tif (report)\n\t\treport.set(msg[1] || {status: 'done'});\n};\n"],"sourceRoot":"/source/"}