{"version":3,"sources":["client/background.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","_templateObject","_templateObject2","_templateObject3","main","Backbone","common","etc","oneeSama","options","stackBlur","state","BackgroundView","setters","execute","require","View","extend","tagName","colourMap","glass","normal","editing","ocean","initialize","document","head","append","this","el","body","parseDOM","render","reply","store","listenTo","change:userBG","change:illyaBGToggle","change:illyaMuteToggle","change:theme","workModeTOG","target","_this","request","reader","FileReader","readAsDataURL","files","onload","event","img","Image","canvas","createElement","width","height","getContext","drawImage","localStorage","background","toDataURL","blurred","get","src","result","innerHTML","hotConfig","renderIllya","workMode","renderBackground","bg","html","parseHTML","theme","_localStorage","renderGlass","_colourMap$theme","urlBase","config","MEDIA_URL","defer","module","exports"],"mappings":"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","file":"client/background.js","sourcesContent":["/*\n * Background controller. Wallpapers, proper fitting and video backgrounds\n */\n\nconst main = require('./main'),\n\t{Backbone, common, etc, oneeSama, options, stackBlur, state} = main;\n\nconst BackgroundView = Backbone.View.extend({\n\ttagName: 'style',\n\tcolourMap: {\n\t\tglass: {\n\t\t\tnormal: 'rgba(40, 42, 46, 0.5)',\n\t\t\tediting: 'rgba(145, 145, 145, 0.5)'\n\t\t},\n\t\tocean: {\n\t\t\tnormal: 'rgba(28, 29, 34, 0.781)',\n\t\t\tediting: 'rgba(44, 57, 71, 0.88)'\n\t\t}\n\t},\n\tinitialize() {\n\t\tdocument.head.append(this.el);\n\t\tdocument.body.append(etc.parseDOM('<div id=\"user_bg\"></div>'));\n\t\tthis.render();\n\n\t\tmain.reply('background:store', this.store, this);\n\t\tthis.listenTo(options, {\n\t\t\t'change:userBG': this.render,\n\t\t\t'change:illyaBGToggle': this.render,\n\t\t\t'change:illyaMuteToggle': this.render,\n\t\t\t'change:theme': this.render,\n\t\t\t'workModeTOG': this.render\n\t\t});\n\t},\n\t// Store image as dataURL in localStorage\n\tstore(target) {\n\t\t// This could take a while, so loading animation\n\t\tmain.request('loading:show');\n\t\tlet reader = new FileReader();\n\t\treader.readAsDataURL(target.files[0]);\n\t\treader.onload = event => {\n\t\t\tlet img = new Image();\n\t\t\timg.onload = () => {\n\t\t\t\t// Convert to JPEG\n\t\t\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = img.width;\n\t\t\t\tcanvas.height = img.height;\n\t\t\t\tcanvas\n\t\t\t\t\t.getContext('2d')\n\t\t\t\t\t.drawImage(img, 0, 0, img.width, img.height);\n\t\t\t\tlocalStorage.background = canvas.toDataURL('image/jpeg', 0.95);\n\n\t\t\t\t// Generate a blurred version of the background to use for\n\t\t\t\t// posts, modals, etc.\n\t\t\t\tstackBlur.canvas(canvas, 0, 0, img.width, img.height, 10);\n\t\t\t\tlocalStorage.blurred = canvas.toDataURL('image/jpeg', 0.95);\n\n\t\t\t\tmain.request('loading:hide');\n\n\t\t\t\t// Apply new background\n\t\t\t\tif (options.get('userBG'))\n\t\t\t\t\tthis.render();\n\t\t\t};\n\t\t\timg.src = event.target.result;\n\t\t};\n\t},\n\trender() {\n\t\tconst {el} = this;\n\t\tel.innerHTML = '';\n\t\tif (options.get('illyaBGToggle') && state.hotConfig.get('ILLYA_DANCE'))\n\t\t\tthis.renderIllya();\n\t\telse if (options.get('userBG') && !main.oneeSama.workMode)\n\t\t\tthis.renderBackground();\n\t},\n\trenderBackground() {\n\t\tconst bg = localStorage.background;\n\t\tif (!bg)\n\t\t\treturn;\n\t\tlet html = common.parseHTML\n\t\t\t`#user_bg {\n\t\t\t\tbackground: url(${bg}) no-repeat fixed center;\n\t\t\t\tbackground-size: cover;\n\t\t\t}`;\n\n\t\t// Add blurred background image to elements, if theme is glass or ocean\n\t\tconst theme = main.oneeSama.workMode\n\t\t\t? state.hotConfig.get('DEFAULT_CSS') : options.get('theme')\n\t\tif (theme === 'glass' || theme === 'ocean') {\n\t\t\tconst {blurred} = localStorage;\n\t\t\tif (blurred)\n\t\t\t\thtml += ' ' + this.renderGlass(theme, blurred);\n\t\t}\n\t\tthis.el.innerHTML = html;\n\t},\n\trenderGlass(theme, blurred) {\n\t\tconst {normal, editing} = this.colourMap[theme];\n\t\treturn common.parseHTML\n\t\t\t`.glass {\n\t\t\t\tbackground:\n\t\t\t\t\tlinear-gradient(${normal}, ${normal}),\n\t\t\t\t\turl(${blurred}) center fixed no-repeat;\n\t\t\t\tbackground-size: cover;\n\t\t\t}\n\t\t\t.glass.editing, .editing .background {\n\t\t\t\tbackground:\n\t\t\t\t\tlinear-gradient(${editing}, ${editing}),\n\t\t\t\t\turl(${blurred}) center fixed no-repeat;\n\t\t\t\tbackground-size: cover;\n\t\t\t}\n\t\t\t.background {\n\t\t\t\tpadding: 10px;\n\t\t\t\tmargin: 2px;\n\t\t\t}`;\n\t},\n\trenderIllya() {\n\t\tconst urlBase = main.config.MEDIA_URL + 'illya.';\n\t\tthis.el.innerHTML = common.parseHTML\n\t\t\t`<video autoplay loop ${options.get('illyaMuteToggle') && 'muted'}>\n\t\t\t\t<source src=\"${urlBase + 'webm'}\" type=\"video/webm\">\n\t\t\t\t<source src=\"${urlBase + 'mp4'}\" type=\"video/mp4\">\n\t\t\t</video>`;\n\t}\n});\n\nmain.defer(() => module.exports = new BackgroundView());\n"],"sourceRoot":"/source/"}