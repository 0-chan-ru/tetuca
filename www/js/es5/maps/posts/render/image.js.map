{"version":3,"sources":["posts/render/image.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","readableFilesize","size","Math","round","toString","slice","hiddenToggle","reveal","options","get","parseHTML","_templateObject3","lang","imageSearch","data","html","indexOf","ext","searchTemplates","google","_engine","thumbPath","mid","imagePaths","type","imageLink","name","_imgnm","imgnm","m","match","fullName","escape","tooLong","length","attrs","href","config","SECONDARY_MEDIA_URL","src","rel","download","title","_templateObject5","parseAttributes","spoilerInfo","_ref","largeThumb","spoiler","thumb","spoil","dims","images","commaList","_slicedToArray","_templateObject","_templateObject2","_templateObject4","_templateObject6","setters","_lang","_state","_underscore","_options","_util","execute","renderImage","showThumb","renderFigcaption","hat","renderThumbnail","list","audio","apng","undefined","_data$dims","thumbWidth","thumbHeight","sp","linkAttrs","target","imgAttrs","width","height","this","thumbStyle","style","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","TypeError","models","engine","url","symbol","templates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","_step$value","class","_iterator"],"mappings":"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","file":"posts/render/image.js","sourcesContent":["/*\n Image thumbnail HTML rendering\n*/\n\nimport lang from 'lang'\nimport {config} from '../../state'\nimport {escape} from 'underscore'\nimport options from '../../options'\nimport {parseHTML, commaList} from '../../util'\n\n// Render a thumbnail of an image, according to configuration settings\nexport function renderImage(data, reveal) {\n\tconst showThumb = options.get(\"thumbs\") !== 'hide' || reveal\n\treturn parseHTML\n\t\t`<figure>\n\t\t\t${renderFigcaption(data, reveal)}\n\t\t\t${config.images.hat && showThumb ? '<span class=\"hat\"></span>': ''}\n\t\t\t${showThumb ? renderThumbnail(data) : ''}\n\t\t</figure>`\n}\n\n// Render the information caption above the image\nexport function renderFigcaption(data, reveal) {\n\tconst list = commaList([\n\t\tdata.audio ? '\\u266B' : '',\n\t\tdata.length,\n\t\treadableFilesize(data.size),\n\t\t`${data.dims[0]}x${data.dims[1]}`,\n\t\tdata.apng ? 'APNG' : ''\n\t])\n\treturn parseHTML\n\t\t`<figcaption>\n\t\t\t${hiddenToggle(reveal)}\n\t\t\t${imageSearch(data)}\n\t\t\t<span>\n\t\t\t\t(${list})\n\t\t\t</span>\n\t\t\t${imageLink(data)}\n\t\t</figcaption>`\n}\n\n// Renders a human readable file size string\nfunction readableFilesize(size) {\n\tif (size < 1024) {\n\t\treturn size + ' B'\n\t}\n\tif (size < 1048576) {\n\t\treturn Math.round(size / 1024) + ' KB'\n\t}\n\tsize = Math.round(size / 104857.6).toString()\n\treturn size.slice(0, -1) + '.' + size.slice(-1) + ' MB'\n}\n\n// Render the button for toggling hidden thumbnails\nfunction hiddenToggle(reveal) {\n\tif (options.get('thumbs') !== 'hide') {\n\t\treturn ''\n\t}\n\treturn parseHTML\n\t\t`<a class=\"imageToggle\">\n\t\t\t[${lang[reveal ? 'hide' : 'show']}]\n\t\t</a>`\n}\n\n// Base URLs of image addresses\nconst imagePaths = {\n\tsrc: '/img/src/',\n\tthumb: '/img/thumb/',\n\tmid: '/img/mid/',\n\tspoil: '/ass/spoil/spoiler'\n}\n\n// Generate template functions for each image search engine\nconst searchTemplates = (function() {\n\tconst models = [\n\t\t{\n\t\t\tengine: 'google',\n\t\t\turl: 'https://www.google.com/searchbyimage?image_url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'G'\n\t\t},\n\t\t{\n\t\t\tengine: 'iqdb',\n\t\t\turl: 'http://iqdb.org/?url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'Iq'\n\t\t},\n\t\t{\n\t\t\tengine: 'saucenao',\n\t\t\turl: 'http://saucenao.com/search.php?db=999&url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'Sn'\n\t\t},\n\t\t{\n\t\t\tengine: 'desustorage',\n\t\t\ttype: 'MD5',\n\t\t\turl: 'https://desustorage.org/_/search/image/',\n\t\t\tsymbol: 'Ds'\n\t\t},\n\t\t{\n\t\t\tengine: 'exhentai',\n\t\t\ttype: 'SHA1',\n\t\t\turl: 'http://exhentai.org/?fs_similar=1&fs_exp=1&f_shash=',\n\t\t\tsymbol: 'Ex'\n\t\t}\n\t]\n\n\tconst templates = {}\n\tfor (let {engine, url, type, symbol} of models) {\n\t\tconst attrs = {\n\t\t\ttarget: '_blank',\n\t\t\trel: 'nofollow',\n\t\t\tclass: 'imageSearch ' + engine\n\t\t}\n\t\ttemplates[engine] = data => {\n\t\t\tif (!options.get(engine)) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t\tattrs.href = url+ (type === 'thumb' ? thumbPath(data) : data[type])\n\t\t\treturn parseHTML\n\t\t\t\t`<a ${parseAttributes(attrs)}>\n\t\t\t\t\t${symbol}\n\t\t\t\t</a>`\n\t\t}\n\t}\n\n\treturn templates\n})()\n\n// Render image search links in accordance to client settings\nfunction imageSearch(data) {\n\tlet html = ''\n\n\t// Only render google for PDFs and MP3s\n\tif (['.pdf', '.mp3'].indexOf(data.ext) > -1) {\n\t\tif (options.get(\"google\")) {\n\t\t\treturn searchTemplates.google(data)\n\t\t}\n\t\treturn ''\n\t}\n\tfor (let engine in searchTemplates) {\n\t\thtml += searchTemplates[engine](data)\n\t}\n\treturn html\n}\n\n// Get the thumbnail path of an image, accounting for not thumbnail of specific\n// type being present\nfunction thumbPath(data, mid) {\n\treturn imagePaths[type] + data[mid && data.mid ? 'mid' : 'thumb']\n}\n\n// Render a name + download link of an image\nfunction imageLink(data) {\n\tlet name = '',\n\t\t{imgnm} = imgnm\n\tconst m = imgnm.match(/^(.*)\\.\\w{3,4}$/);\n\tif (m) {\n\t\tname = m[1]\n\t}\n\tconst fullName = escape(imgnm),\n\t\ttooLong = name.length >= 38\n\tif (tooLong) {\n\t\timgnm = escape(name.slice(0, 30))\n\t\t\t+ '(&hellip;)'\n\t\t\t+ escape(data.ext)\n\t}\n\tconst attrs = {\n\t\thref: `${config.SECONDARY_MEDIA_URL}src/${data.src}`,\n\t\trel: 'nofollow',\n\t\tdownload: fullName\n\t}\n\tif (tooLong) {\n\t\tattrs.title = fullName\n\t}\n\treturn parseHTML\n\t\t`<a ${parseAttributes(attrs)}>\n\t\t\t${imgnm}\n\t\t</a>`\n}\n\n// Render a hat on top of the thumbnail, if enabled\nfunction renderHat(showThumb) {\n\tif (showThumb && config.images.hats) {\n\t\treturn '<span class=\"hat\"></span>'\n\t}\n\treturn ''\n}\n\n// Render the actual thumbnail image\nexport function renderThumbnail(data, href) {\n\tlet src = imagePaths.src + data.src,\n\t\tthumb,\n\t\t[width, height, thumbWidth, thumbHeight] = data.dims\n\n\tif (data.spoiler && options.get('spoilers')) {\n\t\t// Spoilered and spoilers enabled\n\t\tconst sp = spoilerInfo(data)\n\t\tthumb = sp.thumb\n\t\tthumbWidth = sp.dims[0]\n\t\tthumbHeight = sp.dims[1]\n\t} else if (data.ext === '.gif' && options.get('autogif')) {\n\t\t// Animated GIF thumbnails\n\t\tthumb = src\n\t} else {\n\t\tthumb = thumbPath(data, options.get('thumbs') !== 'small')\n\t}\n\n\tconst linkAttrs = {\n\t\ttarget: '_blank',\n\t\trel: 'nofollow',\n\t\thref: href || src\n\t}\n\tconst imgAttrs = {\n\t\tsrc: thumb,\n\t\twidth: thumbWidth,\n\t\theight: thumbHeight\n\t}\n\n\t// Catalog pages\n\tif (href) {\n\t\t// Handle the thumbnails with the HTML5 History controller\n\t\tlinkAttrs.class = 'history'\n\n\t\t// No image hover previews\n\t\timgAttrs.class = 'expanded'\n\t\tif(this.thumbStyle == 'hide') {\n\t\t\timgAttrs.style = 'display: none'\n\t\t}\n\t}\n\n\treturn parseHTML\n\t\t`<a ${parseAttributes(linkAttrs)}>\n\t\t\t<img ${parseAttributes(imgAttrs)}>\n\t\t</a>`\n}\n\n// Parse and return image spoiler information\nfunction spoilerInfo({largeThumb, spoiler}) {\n\tlet thumb = imagePaths.spoil\n\tif (largeThumb || options.get(\"thumbs\") !== 'small') {\n\t\tthumb += 's'\n\t}\n\thtml += spoiler + '.png'\n\treturn {\n\t\tthumb,\n\t\tdims: config.images.thumb[largeThumb ? 'midDims' : 'thumbDims']\n\t}\n}\n"],"sourceRoot":"/source/"}