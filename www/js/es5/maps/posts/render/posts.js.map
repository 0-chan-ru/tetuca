{"version":3,"sources":["posts/render/posts.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","renderPost","data","image","mod","body","backlinks","banned","parseHTML","_templateObject3","renderHeader","renderImage","renderModInfo","renderBody","renderBacklinks","renderBanned","_templateObject","_templateObject2","setters","_util","_header","_image","_etc","_body","execute","renderSection","cls","arguments","length","undefined","locked","editing","large","num","renderArticle"],"mappings":"AAAA,YAAaA,QAAOC,UAAU,aAAa,WAAW,UAAU,QAAQ,UAAU,SAASC,EAAQC,GAA2I,QAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAASK,GAAWC,GAAM,GAAIC,GAAMD,EAAKC,MAAUC,EAAIF,EAAKE,IAAQC,EAAKH,EAAKG,KAASC,EAAUJ,EAAKI,UAAcC,EAAOL,EAAKK,MAAO,OAAOC,GAAUC,EAAiBC,EAAaR,GAAMS,EAAYR,GAAOC,EAAIQ,cAAcR,GAAK,GAAGS,EAAWR,GAAMS,EAAgBR,GAAWC,EAAOQ,IAAe,IAAljB,GAAIP,GAAUE,EAAaC,EAAYI,EAAaD,EAAgBD,EAAWG,EAAgBC,EAAiBR,CAAuc,QAAQS,SAAS,SAASC,GAAOX,EAAUW,EAAMX,WAAY,SAASY,GAASV,EAAaU,EAAQV,cAAe,SAASW,GAAQV,EAAYU,EAAOV,aAAc,SAASW,GAAMP,EAAaO,EAAKP,aAAaD,EAAgBQ,EAAKR,iBAAkB,SAASS,GAAOV,EAAWU,EAAMV,aAAcW,QAAQ,WAA6mC,QAASC,GAAcvB,GAAM,GAgB3jEwB,GAAGC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,GAAG,GAAEA,UAAA,EAAA,OAAAzB,GAAA4B,SAAAJ,GAAA,WAAAxB,EAAA6B,UAAAL,GAAA,YAAAxB,EAAAC,MAAA6B,OAAA,EAAAxB,EAAAQ,EAAAd,EAAA+B,IAAAP,EAAAzB,EAAAC,IAAA,QAAAgC,GAAAhC,GAAA,GAAAwB,GAAA,OAAA,OAAAxB,GAAA6B,UAAAL,GAAA,YAAAlB,EAAAS,EAAAf,EAAA+B,IAAAP,EAAAzB,EAAAC,IAhBo7Bc,EAAgBtB,GAAwB,iBAAiB,YAAY,mEAAmE,yFAAyF,iBAAiB,YAAY,mEAAmE,yFAAyFuB,EAAiBvB,GAAwB,iBAAiB,YAAY,mBAAmB,yBAAyB,iBAAiB,YAAY,mBAAmB,yBAAyBe,EAAiBf,GAAwB,GAAG,aAAa,kDAAkD,+CAA+C,qEAAqE,uCAAuC,qBAAqB,GAAG,aAAa,kDAAkD,+CAA+C,qEAAqE,uCAAuC,qBAgBjgEF,EAAA,gBAAAiC,GAAAjC,EAAA,gBAAA0C","file":"posts/render/posts.js","sourcesContent":["/**\n * Posts rendering module\n */\n\nimport {parseHTML} from '../../util'\nimport {renderHeader} from './header'\nimport {renderImage} from './image'\nimport {renderBanned, renderBacklinks} from './etc'\nimport {renderBody} from './body'\n\n/**\n * Render the OP\n * @param {Post} data - Post model\n * @param {string=} cls - Class to assign to post\n * @returns {string}\n */\nexport function renderSection(data, cls = '') {\n    if (data.locked) {\n        cls += ' locked'\n    }\n    if (data.editing) {\n        cls += ' editing'\n    }\n    data.image.large = true // Larger thumbnails\n\n    return parseHTML\n        `<section id=\"p${data.num}\" class=\"${cls}\">\n            <div class=\"background glass\">\n                ${renderPost(data)}\n                <span class=\"omit\"></span>\n            </div>\n        </section>`\n}\n\n/**\n * Render a reply post\n * @param {Post} data\n * @returns {string}\n */\nexport function renderArticle(data) {\n    let cls = 'glass'\n    if (data.editing) {\n        cls += ' editing'\n    }\n    return parseHTML\n        `<article id=\"p${data.num}\" class=\"${cls}\">\n            ${renderPost(data)}\n        </article>`\n}\n\nfunction renderPost(data) {\n    const {image, mod, body, backlinks, banned} = data\n\n    return parseHTML\n        `${renderHeader(data)}\n        ${renderImage(image)}\n        <div class=\"container\">\n            ${mod ? renderModInfo(mod) : ''}\n            <blockquote>\n                ${renderBody(body)}\n            </blockquote>\n            <small>\n                ${renderBacklinks(backlinks)}\n            </small>\n            ${banned ? renderBanned(): ''}\n        </div>`\n}\n"],"sourceRoot":"/source/"}