{"version":3,"sources":["posts/embed.js"],"names":["System","register","_export","_context","make_video","id","params","start","allowFullScreen","allowScriptAccess","query","autohide","fs","modestbranding","origin","document","location","rel","showinfo","autoplay","loop","playlist","$","type","src","encodeURI","param","frameborder","attr","video_dims","class","window","screen","width","height","fetchSoundcloud","target","cb","url","encodeURIComponent","getAttribute","xhr","XMLHttpRequest","open","responseType","onload","this","status","response","send","main","util","youtube_url_re","youtube_short_re","youtube_time_re","youtube_short_time_re","soundcloud_url_re","pastebin_re","setters","execute","require","exports","$threads","on","e","timeCall","time","timeRex","t","match","parseInt","$target","css","append","which","metaKey","ctrlKey","altKey","shiftKey","is","$video","find","length","siblings","andSelf","remove","data","m","event","gotInfo","title","node","textContent","orig","color","accessControl","embed","contents","filter","nodeType","ajax","v","alt","dataType","success","error","iframe","preventDefault","previousElementSibling","Math","round","innerWidth","err","json","alert","createElement","parseDOM","html","style","firstChild","text","classList","add","$obj","$window","innerHeight"],"mappings":"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","file":"posts/embed.js","sourcesContent":["/*\nYoutube, soundcloud and pastebin link embeding\n */\n\n// TODO: DRY this shit\n\nlet main = require('../main'),\n\t{$, util} = main;\n\n// >80 char rule\nconst youtube_url_re = exports.youtube_url_re = /(?:>>>*?)?(?:https?:\\/\\/)?(?:www\\.|m.)?youtube\\.com\\/watch\\/?\\?((?:[^\\s#&=]+=[^\\s#&]*&)*)?v=([\\w-]{11})((?:&[^\\s#&=]+=[^\\s#&]*)*)&?(#t=[\\dhms]{1,9})?/,\n\tyoutube_short_re = exports.youtube_short_re = /(?:>>>*?)?(?:https?:\\/\\/)?(?:www\\.|m.)?youtu.be\\/([\\w-]{11})\\??(t=[\\dhms]{1,9})?/,\n\tyoutube_time_re = exports.youtube_time_re = /^#t=(?:(\\d\\d?)h)?(?:(\\d{1,3})m)?(?:(\\d{1,3})s)?$/,\n\tyoutube_short_time_re = exports.youtube_short_time_re = /^t=(?:(\\d\\d?)h)?(?:(\\d{1,3})m)?(?:(\\d{1,3})s)?$/;\n\nfunction make_video(id, params, start) {\n\tif (!params)\n\t\tparams = {allowFullScreen: 'true'};\n\tparams.allowScriptAccess = 'always';\n\tvar query = {\n\t\tautohide: 1,\n\t\tfs: 1,\n\t\tmodestbranding: 1,\n\t\torigin: document.location.origin,\n\t\trel: 0,\n\t\tshowinfo: 0\n\t};\n\tif (start)\n\t\tquery.start = start;\n\tif (params.autoplay)\n\t\tquery.autoplay = params.autoplay;\n\tif (params.loop) {\n\t\tquery.loop = '1';\n\t\tquery.playlist = id;\n\t}\n\n\treturn $('<iframe></iframe>', {\n\t\ttype: 'text/html',\n\t\tsrc: encodeURI('https://www.youtube.com/embed/' + id) + '?'\n\t\t\t+ $.param(query),\n\t\tframeborder: '0',\n\t\tattr: video_dims(),\n\t\tclass: 'youtube-player'\n\t});\n}\n\nfunction video_dims() {\n\tif (window.screen && screen.width <= 320)\n\t\treturn {width: 250, height: 150};\n\telse\n\t\treturn {width: 560, height: 340};\n}\n\nmain.$threads.on('click', '.watch', function(e) {\n\tif (e.which > 1 || e.metaKey || e.ctrlKey || e.altKey || e.shiftKey)\n\t\treturn;\n\tvar $target = $(e.target);\n\n\t// maybe squash that double-play bug? ugh, really\n\tif (!$target.is('a'))\n\t\treturn;\n\n\tvar $video = $target.find('iframe');\n\tif ($video.length) {\n\t\t$video.siblings('br').andSelf().remove();\n\t\t$target.css('width', 'auto');\n\t\treturn false;\n\t}\n\tif ($target.data('noembed'))\n\t\treturn;\n\t//check if longURL, if that fails, check if shortURL\n\tvar m = $target.attr('href').match(youtube_url_re);\n\tif (!m) {\n\t\tm = $target.attr('href').match(youtube_short_re);\n\t\tif (!m)\n\t\t// Shouldn't happen, but degrade to normal click action\n\t\t\treturn;\n\t\ttimeCall(m[1],m[2],youtube_short_time_re);\n\t}\n\ttimeCall(m[2],m[4],youtube_time_re);\n\tfunction timeCall(url, time, timeRex){\n\t\tvar start = 0;\n\t\tif (time){\n\t\t\tvar t = time.match(timeRex);\n\t\t\tif (t) {\n\t\t\t\tif (t[1])\n\t\t\t\t\tstart += parseInt(t[1], 10) * 3600;\n\t\t\t\tif (t[2])\n\t\t\t\t\tstart += parseInt(t[2], 10) * 60;\n\t\t\t\tif (t[3])\n\t\t\t\t\tstart += parseInt(t[3], 10);\n\t\t\t}\n\t\t}\n\t\t$target\n\t\t\t.css('width', video_dims().width)\n\t\t\t.append('<br>', make_video(url, null, start))\n\t}\n\treturn false;\n});\n\nmain.$threads.on('mouseenter', '.watch', function (event) {\n\tvar $target = $(event.target);\n\tif ($target.data('requestedTitle'))\n\t\treturn;\n\t$target.data('requestedTitle', true);\n\t// Edit textNode in place so that we don't mess with the embed\n\tvar node = $target.contents().filter(function () {\n\t\treturn this.nodeType === 3;\n\t})[0];\n\tif (!node)\n\t\treturn;\n\tconst orig = node.textContent;\n\tnode.textContent = orig + '...';\n\tvar m = $target.attr('href').match(youtube_url_re);\n\tif (!m){\n\t\tm = $target.attr('href').match(youtube_short_re);\n\t\tif(!m)\n\t\t\treturn;\n\t\t$.ajax({\n\t\t\turl: '//gdata.youtube.com/feeds/api/videos/' + m[1],\n\t\t\tdata: {v: '2', alt: 'jsonc'},\n\t\t\tdataType: 'json',\n\t\t\tsuccess: gotInfo,\n\t\t\terror() {\n\t\t\t\tnode.textContent = orig + '???';\n\t\t\t}\n\t\t});\n\t}\n\n\t$.ajax({\n\t\turl: '//gdata.youtube.com/feeds/api/videos/' + m[2],\n\t\tdata: {v: '2', alt: 'jsonc'},\n\t\tdataType: 'json',\n\t\tsuccess: gotInfo,\n\t\terror() {\n\t\t\tnode.textContent = orig + '???';\n\t\t}\n\t});\n\t// Creates the Titles upon hover\n\t// NOTE: Condense gotInfos into single function\n\tfunction gotInfo(data) {\n\t\tvar title = data && data.data && data.data.title;\n\t\tif (title) {\n\t\t\tnode.textContent = orig + ': ' + title;\n\t\t\t$target.css({color: 'black'});\n\t\t}\n\t\telse\n\t\t\tnode.textContent = orig + ' (gone?)';\n\n\t\tif (data\n\t\t\t&& data.data\n\t\t\t&& data.data.accessControl\n\t\t\t&& data.data.accessControl.embed === 'denied'\n\t\t) {\n\t\t\tnode.textContent += ' (EMBEDDING DISABLED)';\n\t\t\t$target.data('noembed', true);\n\t\t}\n\t}\n});\n\nfunction make_embed(uri, params, dims) {\n\tvar $obj = $('<object/>', {attr: dims});\n\tfor (var name in params) {\n\t\t$('<param/>', {\n\t\t\tattr: {\n\t\t\t\tname: name,\n\t\t\t\tvalue: params[name]\n\t\t\t}\n\t\t}).appendTo($obj);\n\t}\n\t$('<embed/>', {\n\t\tsrc: uri,\n\t\ttype: 'application/x-shockwave-flash'\n\t})\n\t\t.attr(dims)\n\t\t.attr(params)\n\t\t.appendTo($obj);\n\treturn $obj;\n}\n\n/* SOUNDCLOUD */\n\nconst soundcloud_url_re = exports.soundcloud_url_re = /(?:>>>*?)?(?:https?:\\/\\/)?(?:www\\.)?soundcloud\\.com\\/([\\w-]{1,40}\\/[\\w-]{1,80})\\/?/;\n\nfunction fetchSoundcloud(target, width, cb) {\n\tconst url = 'https://soundcloud.com/oembed?url='\n\t\t+ encodeURIComponent(target.getAttribute('href'))\n\t\t+ `&maxwidth=${width}&maxheight=166&auto_play=true&format=json`\n\t\t+ '&show_comments=false';\n\tconst xhr = new XMLHttpRequest();\n\txhr.open('GET', url);\n\txhr.responseType = 'json';\n\txhr.onload = function () {\n\t\tif (this.status !== 200)\n\t\t\treturn cb(this.status);\n\t\tcb(null, this.response);\n\t};\n\txhr.send();\n}\n\nmain.$threads.on('click', '.soundcloud', function (e) {\n\tif (e.which > 1 || e.ctrlKey || e.altKey || e.shiftKey || e.metaKey)\n\t\treturn;\n\tconst {target} = e,\n\t\tiframe = target.query('iframe');\n\te.preventDefault();\n\tif (iframe) {\n\t\tiframe.previousElementSibling.remove();\n\t\tiframe.remove();\n\t\treturn;\n\t}\n\n\tconst width = Math.round(window.innerWidth * 0.75);\n\tfetchSoundcloud(target, width, (err, json) => {\n\t\tif (err)\n\t\t\treturn alert(err);\n\t\ttarget.append(document.createElement('br'));\n\t\ttarget.append(util.parseDOM(json.html));\n\t\ttarget.style.width = width + 'px';\n\t});\n});\n\nmain.$threads.on('mouseenter', '.soundcloud:not(.fetched)', function (event) {\n\tconst {target} = event,\n\t\tnode = target.firstChild,\n\t\ttext = node.textContent;\n\tnode.textContent = text + ' ...';\n\n\t// We should not be doing 2 separate fetches on mouseover and click, but\n\t// what if the user manages to click without mouseenter somehow?\n\tfetchSoundcloud(target, 1000, (err, json) => {\n\t\tif (err)\n\t\t\treturn node.textContent = `${text}: Error: ${err}`;\n\t\tnode.textContent = `${text}: ${json.title}`;\n\t\ttarget.style.color = 'black';\n\t\ttarget.classList.add('fetched');\n\t});\n});\n\n// PASTEBIN\nconst pastebin_re = exports.pastebin_re = /(?:>>>*?)?(?:https?:\\/\\/)?(?:www\\.|m.)?pastebin\\.com\\/(.*)/;\n//Pastebin's API seems built for MAKING pastebins but not sharing them\n\n$(document).on('click', '.pastebin', function(event){\n\tif (event.which > 1 || event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\treturn;\n\tvar $target = $(event.target);\n\n\tvar $obj = $target.find('iframe');\n\tif ($obj.length) {\n\t\t$obj.siblings('br').andSelf().remove();\n\t\t$target.css({\n\t\t\twidth: 'auto',\n\t\t\theight: 'auto'\n\t\t});\n\t\treturn false;\n\t}\n\n\tvar m = $target.attr('href').match(pastebin_re);\n\tif (!m)\n\t\treturn;\n\tvar $window = $(window),\n\t\twidth = Math.round($window.innerWidth() * 0.65),\n\t\theight = Math.round($window.innerHeight() * 0.65);\n\t$target\n\t\t.css({\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t})\n\t\t.append('<br>', $('<iframe></iframe>', {\n\t\t\ttype: 'text/html',\n\t\t\tsrc: 'https://pastebin.com/embed_iframe.php?i='+ m[1],\n\t\t\tframeborder: '0',\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t}))\n\treturn false;\n});\n"],"sourceRoot":"/source/"}