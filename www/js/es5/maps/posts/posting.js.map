{"version":3,"sources":["posts/posting.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","handle_shortcut","event","prevent","stopImmediatePropagation","preventDefault","altKey","opts","options","attributes","which","aside","document","query","postSM","feed","togglespoiler","postForm","onToggle","done","$submit","attr","finish","textSpoiler","postState","this","imouto","state2","spoiler","sp","$input","val","expandAll","imager","massExpander","toggle","workMode","main","oneeSama","Cookie","set","banner","querySelector","style","display","getElementById","setAttribute","config","MEDIA_URL","state","hotConfig","get","cssHash","thumbStyle","trigger","window","addEventListener","openPostBox","num","_templateObject","Article","embed","ident","$","_","Backbone","common","connSM","util","lang","postModel","inputMinSize","ComposerModel","ArticleComposer","ComposerView","setters","execute","require","undefined","reply","renderIdentity","screen","width","Model","extend","idAttribute","on","feeder","act","el","classList","remove","$threads","find","hide","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","queryAll","Symbol","iterator","next","err","op","section","closest","getNum","createElement","page","posts","dispatch","model","destination","preflight","matches","msg","onAllocation","dispatcher","IMAGE_STATUS","$doc","parentNode","hook","_ref","links","$buffer","each","$a","text","m","match","$ref","join","postRef","refText","events","click #cancel","change #imageInput","input #trans","keydown #trans","click #done","click #toggle","initialize","args","prototype","call","listenTo","change","renderButtons","change:spoiler","renderSpoilerPane","render","insertIntoDOM","nextSpoiler","pending","line_count","char_count","OneeSama","callback","inject","blockqoute","eLinkify","tamashii","desc","mine","readAll","you","setModel","attrs","input","name","id","rows","class","autocomplete","isMobile","form","method","enctype","target","cancel","type","imageInput","accept","innerHTML","parseHTML","els","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","parsed","parse_name","$name","$email","haveTrip","textContent","tetxContent","anon","parseDOM","forEach","after","email","trim","add","removeAttribute","_ref2","before","resizeInput","fun","sizer","size","INPUT_ROOM","Math","max","getBoundingClientRect","left","_model$attributes","uploading","uploaded","uploadStatus","sentAllocRequest","allocWait","submit","disabled","marginLeft","background","backgroundImage","View","S_BOL","touchable_spoiler_tag","_ref3","setElement","isThread","$lineBuffer","$meta","$subject","maxlength","SUBJECT_MAX_LENGTH","$blockquote","$sizer","appendTo","append","$el","subject","$uploadForm","renderUploadForm","focus","$b","$tag","children","first","href","removeAttr","d","prop","css","margin-left","$cancel","$imageInput","$uploadStatus","html","$toggle","$form","click","proxy","WEBM","$iframe","src","uploadError","cancelled","onImageChosen","extra","prepareUpload","k","uploadURL","load","doc","contentWindow","contentDocument","error","test","length","unknownUpload","e","setTimeout","uploadFallbackMessage","notifyUploading","a","stat","unknownResult","offset","onInput","embedRewrite","rw","old","newVal","substr","index","changed","start","diff","end","Event","time","video","selectionStart","selectionEnd","youtube_url_re","findTimeArg","youtube_short_re","soundcloud_url_re","sc","pastebin_re","pbin","nl","lastIndexOf","ok","commit","split","reverse","lim","setSelectionRange","MAX_POST_CHARS","params","indexOf","i","len","pair","youtube_time_re","lines","breach","MAX_POST_LINES","pop","send","INSERT_POST","allocationMessage","o","fragment","createTextNode","normalize","image","opt","key","nonce","request","onKeyDown","_this","follow","slice","bind","_this2","flushPending","replaceWith","contents","padding-left","FINISH_POST","preserve","replyBox","missing","allRolls","sent","seen","_checkAgain","n","pick","pick_spoiler","ownPosts","header","addClass","insertUploaded","siblings","andSelf","show","onbeforeunload","info","renderImage","$img","arg","t","onImageAllocation","INSERT_IMAGE","addReference","sel","stopListening","Hidamari","autoExpandImage","exports","data","isInside","gsel","parentElement","post","getSelection","toString"],"mappings":"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","file":"posts/posting.js","sourcesContent":["/*\n * Evertything related to writing and commiting posts\n */\n\nconst Article = require('./article'),\n\tmain = require('../main'),\n\tembed = require('./embed'),\n\tident = require('./identity'),\n\timager = require('./imager'),\n\t{$, _, Backbone, Cookie, common, config, connSM, util, lang, oneeSama,\n\t\toptions, postSM, state} = main;\n\nlet postForm, postModel;\n/*\n The variable gets overwritten, so a simple refference will not do. Calling a\n fucntion to retrieve the var each time solves the problem.\n */\nmain.reply('postForm', () => postForm)\n\t.reply('postModel', () => postModel)\n\t.reply('postForm:indentity', () => postForm && postForm.renderIdentity());\n\n// Minimal size of the input buffer\nlet\tinputMinSize = 300;\n// For mobile\nif (window.screen && screen.width <= 320)\n\tinputMinSize = 50;\n\nconst ComposerModel = Backbone.Model.extend({idAttribute: 'num'});\n\n// Synchronyse postform state with websocket connectivity\nconnSM.on('synced', postSM.feeder('sync'));\nconnSM.on('dropped', postSM.feeder('desync'));\nconnSM.on('desynced', postSM.feeder('desync'));\n\n// Allow remotely altering posting FSM state\nmain.reply('postSM:feed', state => postSM.feed(state));\n\npostSM.act('* + desync -> none', () => {\n\t// TODO: Desync logic\n\tif (postForm) {\n\t\tpostForm.el.classList.remove('editing');\n\t\tpostForm.$input.val('');\n\t\tpostForm.finish();\n\t}\n\tmain.$threads.find('aside.posting').hide();\n});\n\npostSM.act('none + sync, draft, alloc + done -> ready', () => {\n\t// TODO: Add unfinished post checking\n\n\tif (postForm) {\n\t\tpostForm.remove();\n\t\tpostForm = postModel = null;\n\t}\n\tfor (let el of main.$threads[0].queryAll('aside.posting')) {\n\t\tel.style.display = '';\n\t}\n});\n\n// Make new postform\npostSM.act('ready + new -> draft', aside => {\n\tlet op,\n\t\tsection = aside.closest('section');\n\tif (section)\n\t\top = util.getNum(section);\n\telse\n\t\tsection = document.createElement('section');\n\n\t// Shift OP's replies on board pages\n\tif (op && !state.page.get('thread'))\n\t\tstate.posts.get(op).dispatch('shiftReplies', true);\n\n\tpostForm = new ComposerView({\n\t\tmodel: postModel = new ComposerModel({op}),\n\t\tdestination: aside,\n\t\tsection\n\t});\n});\n\npostSM.preflight('draft', aside => aside.matches('aside'));\n\npostSM.act('draft + alloc -> alloc', msg => postForm.onAllocation(msg));\n\n// Render image upload status messages\nmain.dispatcher[common.IMAGE_STATUS] = msg =>\n\tpostForm && postForm.dispatch(msg[0]);\n\nmain.$doc.on('click', 'aside.posting a', function () {\n\tpostSM.feed('new', this.parentNode);\n});\n\nmain.$doc.on('keydown', handle_shortcut);\n\nfunction handle_shortcut(event) {\n\tif (!event.altKey)\n\t\treturn;\n\n\tconst opts = options.attributes;\n\tswitch(event.which) {\n\t\tcase opts.new:\n\t\t\tconst aside = document.query('aside.posting');\n\t\t\tif (aside) {\n\t\t\t\tpostSM.feed('new', aside);\n\t\t\t\tprevent();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase opts.togglespoiler:\n\t\t\tif (postForm) {\n\t\t\t\tpostForm.onToggle(event);\n\t\t\t\tprevent();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase opts.done:\n\t\t\tif (postForm && !postForm.$submit.attr('disabled')) {\n\t\t\t\tpostForm.finish();\n\t\t\t\tprevent();\n\t\t\t}\n\t\t\tbreak;\n\t\t// Insert text spoiler\n\t\tcase opts.textSpoiler:\n\t\t\tif (postForm) {\n\t\t\t\tvar postState = this.imouto.state2.spoiler;\n\t\t\t\t// Was spoiler already started?\n\t\t\t\tvar sp = (postState ? '[/' : ' [') + 'spoiler]';\n\t\t\t\tthis.imouto.state2.spoiler = !postState;\n\t\t\t\tthis.$input.val(this.$input.val() + sp);\n\t\t\t\tprevent();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase opts.expandAll:\n\t\t\timager.massExpander.toggle();\n\t\t\tprevent();\n\t\t\tbreak;\n\t\tcase opts.workMode:\n\t\t\tconst val = main.oneeSama.workMode = !main.oneeSama.workMode;\n\t\t\tCookie.set('workModeTOG', val);\n\t\t\tconst banner = document.querySelector(\"h1 > img\");\n\t\t\tif(banner!=null)\n\t\t\t\tbanner.style.display =  val? 'none':'';\n\t\t\tdocument.getElementById('theme').setAttribute('href',\n\t\t\t\t\t`${config.MEDIA_URL}css/${val? state.hotConfig.get('DEFAULT_CSS'): main.options.get(\"theme\")}.css?v=${main.cssHash}`);\n\t\t\toneeSama.thumbStyle = val? 'hide': main.options.get('thumbs');\n\t\t\tmain.options.trigger(\"workModeTOG\");\n\t\t\twindow.addEventListener('beforeunload', function () {\n\t\t\t\tCookie.set(\"workModeTOG\",false);\n\t\t\t});\n\t\t\tprevent()\n\t\t\tbreak;\n\t}\n\n\tfunction prevent() {\n\t\tevent.stopImmediatePropagation();\n\t\tevent.preventDefault();\n\t}\n}\n\n// TODO: Unify self-updates with OneeSama; this is redundant\nmain.oneeSama.hook('insertOwnPost', ({links}) => {\n\tif (!postForm || !links)\n\t\treturn;\n\tpostForm.$buffer.find('.nope').each(function () {\n\t\tvar $a = $(this);\n\t\tconst text = $a.text(),\n\t\t\tm = text.match(/^>>(\\d+)/);\n\t\tif (!m)\n\t\t\treturn;\n\t\tconst num = m[1],\n\t\t\top = links[num];\n\t\tif (!op)\n\t\t\treturn;\n\t\tlet $ref = $(common.join([postForm.imouto.postRef(num, op, false)]));\n\t\t$a.attr('href', $ref.attr('href')).attr('class', 'history');\n\t\tconst refText = $ref.text();\n\t\tif (refText != text)\n\t\t\t$a.text(refText);\n\t});\n});\n\nconst ArticleComposer = Article.extend({\n\tevents: {\n\t\t'click #cancel': 'cancel',\n\t\t'change #imageInput': 'onImageChosen',\n\t\t'input #trans': 'onInput',\n\t\t'keydown #trans': 'onKeyDown',\n\t\t'click #done': 'finish',\n\t\t'click #toggle': 'onToggle'\n\t},\n\tinitialize(args) {\n\t\t// super() call\n\t\tArticle.prototype.initialize.call(this);\n\t\tthis.listenTo(this.model, {\n\t\t\t'change': this.renderButtons,\n\t\t\t'change:spoiler': this.renderSpoilerPane\n\t\t});\n\t\tthis.render(args).insertIntoDOM(args);\n\t\tthis.model.set({\n\t\t\tspoiler: 0,\n\t\t\tnextSpoiler: -1\n\t\t});\n\n\t\tthis.pending = '';\n\t\tthis.line_count = 1;\n\t\tthis.char_count = 0;\n\n\t\t// Initialize the form's private rendering singleton instance\n\t\tconst imouto = this.imouto = new common.OneeSama({\n\t\t\tcallback: inject,\n\t\t\top: state.page.get('thread'),\n\t\t\tblockqoute: this.blockqoute,\n\t\t\teLinkify: main.oneeSama.eLinkify,\n\t\t\tlang: main.lang,\n\t\t\ttamashii(num) {\n\t\t\t\tlet section = document.query('#p' + num);\n\t\t\t\tsection = section && section.closest('section');\n\t\t\t\tif (section) {\n\t\t\t\t\tconst desc = num in state.mine.readAll() && lang.you;\n\t\t\t\t\treturn this.postRef(num, util.getNum(section), desc);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\treturn `<a class=\"nope\">&gt;&gt;${num}</a>`;\n\t\t\t}\n\t\t});\n\t\timouto.setModel(this.model);\n\t},\n\t// Initial render\n\trender() {\n\t\t// Define attributes separatly for readbility\n\t\tconst attrs = {\n\t\t\tinput: {\n\t\t\t\tname: 'body',\n\t\t\t\tid: 'input',\n\t\t\t\trows: 1,\n\t\t\t\tclass: 'themed exclude',\n\t\t\t\tautocomplete: main.isMobile\n\t\t\t},\n\t\t\tform: {\n\t\t\t\tmethod: 'post',\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t\ttarget: 'upload',\n\t\t\t\tid: 'uploadForm'\n\t\t\t},\n\t\t\tcancel: {\n\t\t\t\ttype: 'buttom',\n\t\t\t\tvalue: lang.cancel,\n\t\t\t\tid: 'cancel'\n\t\t\t},\n\t\t\timageInput: {\n\t\t\t\ttype:'file',\n\t\t\t\tid: 'imageInput',\n\t\t\t\tname: 'image',\n\t\t\t\taccept: 'image/*;.webm;.pdf;.mp3'\n\t\t\t},\n\t\t\ttoggle: {\n\t\t\t\ttype: 'button',\n\t\t\t\tid: 'toggle'\n\t\t\t}\n\t\t};\n\n\t\tthis.el.innerHTML = parseHTML\n\t\t\t`<header>\n\t\t\t\t<a class=\"name nope\" target=\"_blank\">\n\t\t\t\t\t<b></b>\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t\t<span class=\"oi control\" data-glyph=\"chevron-bottom\"></span>\n\t\t\t<div class=\"container\">\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p id=\"buffer\" class=\"exclude\"></p>\n\t\t\t\t\t<p id=\"lineBuffer\" class=\"exclude\"></p>\n\t\t\t\t\t<textarea ${attrs.input}></textarea>\n\t\t\t\t</blockquote>\n\t\t\t\t<form ${attrs.form}>\n\t\t\t\t\t<input ${attrs.cancel}>\n\t\t\t\t\t<input ${attrs.imageInput}>\n\t\t\t\t\t<input ${attrs.toggle}>\n\t\t\t\t\t<strong id=\"uploadStatus\"></strong>\n\t\t\t\t</form>\n\t\t\t\t<small></small>\n\t\t\t</div>`;\n\n\t\t// Cache elements to avoid lookup\n\t\tconst els = ['buffer', 'lineBuffer', 'input', 'uploadForm', 'cancel',\n\t\t\t'imageInput', 'toggle', 'uploadStatus', 'hiddenUpload', 'sizer'];\n\t\tfor (let el of els) {\n\t\t\tthis[el] = document.query('#' + el);\n\t\t}\n\t\tthis.renderIdentity();\n\t\treturn this;\n\t},\n\t// Name, emaail and tripcode field\n\trenderIdentity() {\n\t\t// Model has already been alocated and has a proper identity rendered\n\t\tif (this.model.get('num'))\n\t\t\treturn;\n\t\tconst parsed = common.parse_name(main.$name.val(), main.$email.val()),\n\t\t\thaveTrip = !!(parsed[1] || parsed[2]);\n\t\tconst el = this.el.query('.name'),\n\t\t\tname = el.query('a');\n\t\tif (parsed[0])\n\t\t\tname.textContent = parsed[0] + ' ';\n\t\telse\n\t\t\tname.tetxContent = haveTrip ? '' : lang.anon;\n\t\tif (haveTrip)\n\t\t\tutil.parseDOM(' <code>!?</code>').forEach(el => name.after(el));\n\n\t\t// Insert staff title\n\t\tmain.oneeSama.trigger('fillMyName', name);\n\t\tconst email = main.$email.val().trim();\n\t\tif (email) {\n\t\t\tel.setAttribute('href', 'mailto:' + email);\n\t\t\tel.classList.remove('nope');\n\t\t\tel.classList.add('email');\n\t\t}\n\t\telse {\n\t\t\tel.removeAttribute('href');\n\t\t\tel.classList.add('nope');\n\t\t\tel.classList.remove('email');\n\t\t}\n\t},\n\tinsertIntoDOM({destination}) {\n\t\tdestination.before(this.el);\n\t\tthis.resizeInput();\n\t\tmain.$threads.queryAll('aside.postsing').forEach(el =>\n\t\t\tel.style.display = 'none');\n\t\tthis.fun();\n\t},\n\t/*\n\t Allows keeping the input buffer sized as if the text was monospace,\n\t without actually displaying monospace font. Keeps the input buffer from\n\t shifting around needlessly.\n\t */\n\tresizeInput(val) {\n\t\tconst {sizer, input} = this;\n\t\tif (typeof val !== 'string')\n\t\t\tval = input.value;\n\t\tsizer.textContent = val;\n\t\tlet size = sizer.width + common.INPUT_ROOM;\n\t\tsize = Math.max(size, inputMinSize\n\t\t\t- input.getBoundingClientRect().left\n\t\t\t- this.el.getBoundingClientRect().left);\n\t\tthis.input.style.width = size + 'px';\n\t},\n\trenderButtons() {\n\t\tconst {num, uploading, uploaded, uploadStatus, sentAllocRequest}\n\t\t\t= this.model.attributes;\n\t\tconst allocWait = sentAllocRequest && !num;\n\t\tthis.submit.disabled = !!(uploading || allocWait);\n\t\tif (uploaded)\n\t\t\tthis.submit.style.marginLeft = 0;\n\t\tthis.cancel.disabled = !!allocWait;\n\t\tthis.cancel.style.display = (!num || uploading) ? '' : 'none';\n\t\tthis.imageInput.disabled = !!uploading;\n\t\tthis.uploadStatus.innerHTML = uploadStatus;\n\t},\n\trenderSpoilerPane(model, spoiler) {\n\t\tconst background = spoiler\n\t\t\t? `${config.MEDIA_URL}spoil/spoil${spoiler}.png`\n\t\t\t: config.MEDIA_URL + 'css/ui/pane.png';\n\t\tthis.toggle.style.backgroundImage = `url(\"${background}\")`;\n\t}\n});\n\nconst ComposerView = Backbone.View.extend({\n\tevents: {\n\t\t'input #trans': 'onInput',\n\t\t'keydown #trans': 'onKeyDown',\n\t\t'click #done': 'finish',\n\t\t'click #toggle': 'onToggle'\n\t},\n\tinitialize(args) {\n\t\tthis.listenTo(this.model, {\n\t\t\t'change': this.renderButtons,\n\t\t\t'change:spoiler': this.renderSpoilerPane\n\t\t});\n\n\t\tthis.render(args);\n\n\t\tthis.pending = '';\n\t\tthis.line_count = 1;\n\t\tthis.char_count = 0;\n\n\t\t// Initialize the form's private rendering singleton instance\n\t\tlet imouto = this.imouto = new common.OneeSama({\n\t\t\tcallback: inject,\n\t\t\top: state.page.get('thread'),\n\t\t\tstate: [common.S_BOL, 0],\n\n\t\t\t// TODO: Convert current OneeSama.state array to more flexible\n\t\t\t// object\n\t\t\tstate2: {spoiler: 0},\n\t\t\t$buffer: this.$buffer,\n\t\t\teLinkify: main.oneeSama.eLinkify,\n\t\t\tlang: main.lang,\n\t\t\ttamashii(num) {\n\t\t\t\tlet section = document.query('#p' + num);\n\t\t\t\tsection = section && section.closest('section');\n\t\t\t\tif (section) {\n\t\t\t\t\tconst desc = num in state.mine.readAll() && this.lang.you;\n\t\t\t\t\treturn this.postRef(num, util.getNum(section), desc);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\treturn `<a class=\"nope\">&gt;&gt;${num}</a>`;\n\t\t\t}\n\t\t});\n\t\timouto.hook('spoilerTag', util.touchable_spoiler_tag);\n\t\tmain.oneeSama.trigger('imouto', imouto);\n\t},\n\t// Initial render\n\trender({destination, section}) {\n\t\tconst op = this.model.get('op');\n\t\tthis.setElement((op ? document.createElement('article') : section));\n\n\t\t// A defined op means the post is a reply, not a new thread\n\t\tthis.isThread = !op;\n\n\t\tthis.$buffer = $('<p/>');\n\t\tthis.$lineBuffer = $('<p/>');\n\t\tthis.$meta = $('<header><a class=\"nope\"><b/></a> <time/></header>');\n\t\tthis.$input = $('<textarea/>', {\n\t\t\tname: 'body',\n\t\t\tid: 'trans',\n\t\t\trows: '1',\n\t\t\tclass: 'themed',\n\t\t\tautocomplete: main.isMobile\n\t\t});\n\t\tthis.$submit = $('<input/>', {\n\t\t\tid: 'done',\n\t\t\ttype: 'button',\n\t\t\tvalue: main.lang.done\n\t\t});\n\t\tthis.$subject = $('<input/>', {\n\t\t\tid: 'subject',\n\t\t\tclass: 'themed',\n\t\t\tmaxlength: state.hotConfig.SUBJECT_MAX_LENGTH,\n\t\t\twidth: '80%'\n\t\t});\n\t\tthis.$blockquote = $('<blockquote/>');\n\n\t\t/*\n\t\t Allows keeping the input buffer sized as if the text was monospace,\n\t\t without actually displaying monospace font. Keeps the input buffer from\n\t\t shifting around needlessly.\n\t\t */\n\t\tthis.$sizer = $('<pre/>').appendTo('body');\n\n\t\tthis.$blockquote.append(this.$buffer, this.$lineBuffer, this.$input);\n\t\tthis.$el.append(this.$meta, this.$blockquote, '<small/>');\n\t\tif (this.isThread) {\n\t\t\tthis.$el.append(`<label for=\"subject\">${lang.subject}: </label>`,\n\t\t\t\tthis.$subject);\n\t\t\tthis.$blockquote.hide();\n\t\t}\n\t\tthis.$uploadForm = this.renderUploadForm();\n\t\tthis.$el.append(this.$uploadForm);\n\n\t\t// Add a menu to the postform\n\t\tmain.oneeSama.trigger('draft', this.$el);\n\t\tthis.renderIdentity();\n\n\t\t// Insert into the DOM\n\t\tdestination.style.display = 'none';\n\t\tif (this.isThread) {\n\t\t\tdestination.after(this.el);\n\t\t\tthis.el.after(document.createElement('hr'));\n\t\t\tthis.$subject.focus();\n\t\t}\n\t\telse {\n\t\t\tdestination.before(this.el);\n\t\t\tthis.resizeInput();\n\t\t\tthis.$input.focus();\n\t\t}\n\n\t\tmain.$threads.find('aside.posting').hide();\n\t\tthis.fun();\n\t},\n\t// Render the name, email, and admin title, if any\n\trenderIdentity() {\n\t\t// Model has already been alocated and has a proper identity rendered\n\t\tif (this.model.get('num'))\n\t\t\treturn;\n\t\tconst parsed = common.parse_name(main.$name.val(), main.$email.val()),\n\t\t\thaveTrip = !!(parsed[1] || parsed[2]);\n\t\tlet $b = this.$meta.find('b');\n\t\tif (parsed[0])\n\t\t\t$b.text(parsed[0] + ' ');\n\t\telse\n\t\t\t$b.text(haveTrip ? '' : main.lang.anon);\n\t\tif (haveTrip)\n\t\t\t$b.append(' <code>!?</code>');\n\t\t\n\t\t// Insert staff title\n\t\tmain.oneeSama.trigger('fillMyName', $b);\n\t\tconst email = main.$email.val().trim();\n\t\tlet $tag = this.$meta.children('a').first();\n\t\tif (email) {\n\t\t\t$tag.attr({\n\t\t\t\thref: 'mailto:' + email,\n\t\t\t\ttarget: '_blank',\n\t\t\t\tclass: 'email'\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\t$tag.removeAttr('href').removeAttr('target').attr('class', 'nope');\n\t},\n\trenderButtons() {\n\t\tconst attrs = this.model.attributes,\n\t\t\tallocWait = attrs.sentAllocRequest && !attrs.num,\n\t\t\td = attrs.uploading || allocWait;\n\t\t// Beware of undefined!\n\t\tthis.$submit.prop('disabled', !!d);\n\t\tif (attrs.uploaded)\n\t\t\tthis.$submit.css({'margin-left': '0'});\n\t\tthis.$cancel.prop('disabled', !!allocWait);\n\t\tthis.$cancel.toggle(!!(!attrs.num || attrs.uploading));\n\t\tthis.$imageInput.prop('disabled', !!attrs.uploading);\n\t\tthis.$uploadStatus.html(attrs.uploadStatus);\n\t},\n\trenderSpoilerPane(model, sp) {\n\t\tconst background = sp ? `${config.MEDIA_URL}spoil/spoil${sp}.png`\n\t\t\t: config.MEDIA_URL + 'css/ui/pane.png';\n\t\tthis.$toggle.css('background-image', `url(\"${background}\")`);\n\t},\n\trenderUploadForm() {\n\t\tvar $form = $('<form method=\"post\" enctype=\"multipart/form-data\" '\n\t\t\t+ 'target=\"upload\"></form>');\n\t\tthis.$cancel = $('<input/>', {\n\t\t\ttype: 'button',\n\t\t\tvalue: lang.cancel,\n\t\t\tclick: $.proxy(this, 'cancel')\n\t\t});\n\t\tthis.$imageInput = $('<input/>', {\n\t\t\ttype: 'file',\n\t\t\tid: 'image',\n\t\t\tname: 'image',\n\t\t\taccept: config.WEBM ? 'imager/*;.webm' : 'image/*',\n\t\t\tchange: $.proxy(this, 'onImageChosen')\n\t\t});\n\t\tthis.$toggle = $('<input/>', {\n\t\t\ttype: 'button',\n\t\t\tid: 'toggle'\n\t\t});\n\t\tthis.$uploadStatus = $('<strong/>');\n\t\t$form.append(this.$cancel,\n\t\t\tthis.$imageInput,\n\t\t\tthis.$toggle, ' ',\n\t\t\tthis.$uploadStatus);\n\t\tthis.$iframe = $('<iframe/>', {\n\t\t\tsrc: '',\n\t\t\tname: 'upload',\n\t\t\tid: 'hidden-upload'\n\t\t}).appendTo('body');\n\t\tthis.model.set({\n\t\t\tspoiler: 0,\n\t\t\tnextSpoiler: -1\n\t\t});\n\t\treturn $form;\n\t},\n\t// Cancel file upload\n\tcancel() {\n\t\tif (this.model.get('uploading')) {\n\t\t\tthis.$iframe.remove();\n\t\t\tthis.$iframe = $('<iframe></iframe>', {\n\t\t\t\tsrc: '',\n\t\t\t\tname: 'upload',\n\t\t\t\tid: 'hidden-upload'\n\t\t\t}).appendTo('body');\n\t\t\tthis.uploadError('');\n\t\t\tthis.model.set({cancelled: true});\n\t\t}\n\t\telse\n\t\t\tthis.finish();\n\t},\n\tonImageChosen() {\n\t\tif (this.model.get('uploading') || this.model.get('uploaded'))\n\t\t\treturn;\n\t\tif (!this.$imageInput.val()) {\n\t\t\tthis.model.set('uploadStatus', '');\n\t\t\treturn;\n\t\t}\n\t\tconst extra = this.prepareUpload();\n\t\tfor (var k in extra) {\n\t\t\t$('<input type=hidden>')\n\t\t\t\t.attr('name', k)\n\t\t\t\t.val(extra[k])\n\t\t\t\t.appendTo(this.$uploadForm);\n\t\t}\n\t\tthis.$uploadForm.prop('action', util.uploadURL());\n\t\tthis.$uploadForm.submit();\n\t\tthis.$iframe.load(function() {\n\t\t\tif (!postForm)\n\t\t\t\treturn;\n\t\t\tvar doc = this.contentWindow || this.contentDocument;\n\t\t\tif (!doc)\n\t\t\t\treturn;\n\t\t\ttry {\n\t\t\t\tvar error = $(doc.document || doc).text();\n\t\t\t\t/*\n\t\t\t\t if it's a real response, it'll postMessage to us, so we don't have\n\t\t\t\t to do anything.\n\t\t\t\t */\n\t\t\t\tif (/legitimate imager response/.test(error))\n\t\t\t\t\treturn;\n\t\t\t\t// sanity check for weird browser responses\n\t\t\t\tif (error.length < 5 || error.length > 100)\n\t\t\t\t\terror = lang.unknownUpload;\n\t\t\t\tpostForm.uploadError(error);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\t/*\n\t\t\t\t likely cross-origin restriction\n\t\t\t\t wait before erroring in case the message shows up\n\t\t\t\t */\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tpostForm.uploadFallbackMessage();\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t});\n\t\tthis.notifyUploading();\n\t},\n\tprepareUpload() {\n\t\tthis.model.set('uploadStatus', lang.uploading);\n\t\tthis.$input.focus();\n\t\tconst attrs = this.model.attributes;\n\t\treturn {spoiler: attrs.spoiler, op: attrs.op || 0};\n\t},\n\t/*\n\t this is just a fallback message for when we can't tell, if there was an\n\t error due to cross-origin restrictions\n\t */\n\tuploadFallbackMessage() {\n\t\tvar a = this.model.attributes,\n\t\t\tstat = a.uploadStatus;\n\t\tif (!a.cancelled && a.uploading && (!stat || stat == lang.uploading))\n\t\t\tthis.model.set('uploadStatus', lang.unknownResult);\n\t},\n\tnotifyUploading() {\n\t\tthis.model.set({uploading: true, cancelled: false});\n\t\tthis.$input.focus();\n\t},\n\tresizeInput(val) {\n\t\tif (typeof val !== 'string')\n\t\t\tval = this.$input.val();\n\t\tthis.$sizer.text(val);\n\t\tvar size = this.$sizer.width() + common.INPUT_ROOM;\n\t\tsize = Math.max(size, inputMinSize\n\t\t\t- this.$input.offset().left - this.$el.offset().left);\n\t\tthis.$input.css('width', size + 'px');\n\t},\n\tonInput(val) {\n\t\tif (val === undefined || val instanceof $.Event)\n\t\t\tval = this.$input.val();\n\t\tvar start = this.$input[0].selectionStart,\n\t\t\tend = this.$input[0].selectionEnd;\n\n\t\tvar changed = false,\n\t\t\tm, time, video;\n\n\t\t// Turn YouTube links into proper refs\n\t\twhile(true) {\n\t\t\tm = val.match(embed.youtube_url_re);\n\t\t\tif (!m)\n\t\t\t\tbreak;\n\t\t\t// Substitute\n\t\t\ttime = this.findTimeArg(m[3])\n\t\t\t\t|| this.findTimeArg(m[1])\n\t\t\t\t|| m[4]\n\t\t\t\t|| '';\n\t\t\tvideo = '>>>/watch?v=' + m[2] + time;\n\t\t\tval = embedRewrite(m, video);\n\t\t}\n\n\t\t//Youtu.be links\n\t\twhile(true) {\n\t\t\tm = val.match(embed.youtube_short_re);\n\t\t\tif (!m)\n\t\t\t\tbreak;\n\t\t\t// Substitute\n\t\t\ttime = this.findTimeArg(m[2]) || '';\n\t\t\tvideo = '>>>/watch?v=' + m[1] + time;\n\t\t\tval = embedRewrite(m, video);\n\t\t}\n\n\t\t// SoundCloud links\n\t\twhile(true) {\n\t\t\tm = val.match(embed.soundcloud_url_re);\n\t\t\tif (!m)\n\t\t\t\tbreak;\n\t\t\tvar sc = '>>>/soundcloud/' + m[1];\n\t\t\tval = embedRewrite(m, sc);\n\t\t}\n\n\t\t// Pastebin links\n\t\twhile(true) {\n\t\t\tm = val.match(embed.pastebin_re);\n\t\t\tif (!m)\n\t\t\t\tbreak;\n\t\t\tvar pbin = '>>>/pastebin/' + m[1];\n\t\t\tval = embedRewrite(m, pbin);\n\t\t}\n\n\t\t// Rewite embedable URLs to native embed URL syntax\n\t\tfunction embedRewrite(m, rw) {\n\t\t\tvar old = m[0].length;\n\t\t\tvar newVal = val.substr(0, m.index) + rw + val.substr(m.index + old);\n\t\t\tchanged = true;\n\t\t\tif (m.index < start) {\n\t\t\t\tvar diff = old - rw.length;\n\t\t\t\tstart -= diff;\n\t\t\t\tend -= diff;\n\t\t\t}\n\t\t\treturn newVal;\n\t\t}\n\n\t\tif (changed)\n\t\t\tthis.$input.val(val);\n\n\t\tvar nl = val.lastIndexOf('\\n');\n\t\tif (nl >= 0) {\n\t\t\tvar ok = val.substr(0, nl);\n\t\t\tval = val.substr(nl + 1);\n\t\t\tthis.$input.val(val);\n\t\t\tif (this.model.get('sentAllocRequest') || /[^ ]/.test(ok))\n\t\t\t\tthis.commit(ok + '\\n');\n\t\t}\n\t\telse {\n\t\t\tm = val\n\t\t\t\t.split('')\n\t\t\t\t.reverse()\n\t\t\t\t.join('')\n\t\t\t\t.match(/^(\\s*\\S+\\s+\\S+)\\s+(?=\\S)/);\n\t\t\tif (m) {\n\t\t\t\tvar lim = val.length - m[1].length;\n\t\t\t\tthis.commit(val.substr(0, lim));\n\t\t\t\tval = val.substr(lim);\n\t\t\t\tstart -= lim;\n\t\t\t\tend -= lim;\n\t\t\t\tthis.$input.val(val);\n\t\t\t\tthis.$input[0].setSelectionRange(start, end);\n\t\t\t}\n\t\t}\n\n\t\tthis.$input.attr('maxlength', common.MAX_POST_CHARS - this.char_count);\n\t\tthis.resizeInput(val);\n\t},\n\tfindTimeArg(params) {\n\t\tif (!params || params.indexOf('t=') < 0)\n\t\t\treturn false;\n\t\tparams = params.split('&');\n\t\tfor (let i = 0, len = params.length; i < len; i++) {\n\t\t\tlet pair = '#p' + params[i];\n\t\t\tif (embed.youtube_time_re.test(pair))\n\t\t\t\treturn pair;\n\t\t}\n\t\treturn false;\n\t},\n\t// Commit any staged words to the server\n\tcommit(text) {\n\t\tvar lines;\n\t\tif (text.indexOf('\\n') >= 0) {\n\t\t\tlines = text.split('\\n');\n\t\t\tthis.line_count += lines.length - 1;\n\t\t\tconst breach = this.line_count - common.MAX_POST_LINES + 1;\n\t\t\tif (breach > 0) {\n\t\t\t\tfor (var i = 0; i < breach; i++)\n\t\t\t\t\tlines.pop();\n\t\t\t\ttext = lines.join('\\n');\n\t\t\t\tthis.line_count = common.MAX_POST_LINES;\n\t\t\t}\n\t\t}\n\t\tconst left = common.MAX_POST_CHARS - this.char_count;\n\t\tif (left < text.length)\n\t\t\ttext = text.substr(0, left);\n\t\tif (!text)\n\t\t\treturn;\n\t\tthis.char_count += text.length;\n\n\t\t// Either get an allocation or send the committed text\n\t\tconst attrs = this.model.attributes;\n\t\tif (!attrs.num && !attrs.sentAllocRequest) {\n\t\t\tmain.send([common.INSERT_POST, this.allocationMessage(text, null)]);\n\t\t\tthis.model.set({sentAllocRequest: true});\n\t\t}\n\t\telse if (attrs.num)\n\t\t\tmain.send(text);\n\t\telse\n\t\t\tthis.pending += text;\n\n\t\t// Add it to the user's display\n\t\tif (lines) {\n\t\t\tlines[0] = this.$lineBuffer.text() + lines[0];\n\t\t\tthis.$lineBuffer.text(lines.pop());\n\t\t\tfor (let o = 0, len = lines.length; o < len; o++)\n\t\t\t\tthis.imouto.fragment(lines[o] + '\\n');\n\t\t}\n\t\telse {\n\t\t\tthis.$lineBuffer.append(document.createTextNode(text));\n\t\t\tthis.$lineBuffer[0].normalize();\n\t\t}\n\t},\n\t// Construct the message for post allocation in the database\n\tallocationMessage(text, image) {\n\t\tvar msg = {nonce: main.request('nonce:create')};\n\n\t\tfunction opt(key, val) {\n\t\t\tif (val)\n\t\t\t\tmsg[key] = val;\n\t\t}\n\n\t\topt('name', main.$name.val().trim());\n\t\topt('email', main.$email.val().trim());\n\t\topt('subject', this.$subject.val().trim());\n\t\topt('frag', text);\n\t\topt('image', image);\n\t\topt('op', this.model.get('op'));\n\n\t\treturn msg;\n\t},\n\tonKeyDown(event) {\n\t\tmain.follow(() => {\n\t\t\tswitch(event.which) {\n\t\t\t\tcase 13:\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t// fall-through\n\t\t\t\tcase 32:\n\t\t\t\t\t// predict result\n\t\t\t\t\tvar input = this.$input[0];\n\t\t\t\t\tvar val = this.$input.val();\n\t\t\t\t\tval = val.slice(0, input.selectionStart)\n\t\t\t\t\t\t+ (event.which == 13 ? '\\n' : ' ')\n\t\t\t\t\t\t+ val.slice(input.selectionEnd);\n\t\t\t\t\tthis.onInput(val);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\thandle_shortcut.bind(this)(event);\n\t\t\t}\n\t\t});\n\t},\n\tfinish() {\n\t\tif (this.model.get('num')) {\n\t\t\tthis.flushPending();\n\t\t\tthis.commit(this.$input.val());\n\t\t\tthis.$input.remove();\n\t\t\tthis.$submit.remove();\n\t\t\tif (this.$uploadForm)\n\t\t\t\tthis.$uploadForm.remove();\n\t\t\tif (this.$iframe) {\n\t\t\t\tthis.$iframe.remove();\n\t\t\t\tthis.$iframe = null;\n\t\t\t}\n\t\t\tthis.imouto.fragment(this.$lineBuffer.text());\n\t\t\tthis.$buffer.replaceWith(this.$buffer.contents());\n\t\t\tthis.$lineBuffer.remove();\n\t\t\tthis.$blockquote.css({\n\t\t\t\t'margin-left': '', 'padding-left': ''\n\t\t\t}\n\t\t\t);\n\t\t\tmain.send([common.FINISH_POST]);\n\t\t\tthis.preserve = true;\n\t\t\tif (this.isThread)\n\t\t\t\tthis.$el.append(main.oneeSama.replyBox());\n\n\t\t\tlet missing = this.imouto.allRolls.sent - this.imouto.allRolls.seen;\n\t\t\t//if missing>0 we have to wait until insertOwnPosts \"sees\" the\n\t\t\t// dice\n\t\t\tif (missing > 0) {\n\t\t\t\tlet checkAgain;\n\t\t\t\t(checkAgain= (n) => {\n\t\t\t\t\tsetTimeout(()=> {\n\t\t\t\t\t\tif (this.imouto.allRolls.seen == this.imouto.allRolls.sent || n ==0)\n\t\t\t\t\t\t\tpostSM.feed('done');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcheckAgain(n - 1);\n\t\t\t\t\t}, 100);\n\t\t\t\t})(5); //retry 5 times\n\t\t\t}\n\t\t\telse\n\t\t\t\tpostSM.feed('done');\n\t\t}else\n\t\t\tpostSM.feed('done');\n\t},\n\t// Send any unstaged words\n\tflushPending() {\n\t\tif (this.pending) {\n\t\t\tmain.send(this.pending);\n\t\t\tthis.pending = '';\n\t\t}\n\t},\n\tonToggle(event) {\n\t\tconst attrs = this.model.attributes;\n\t\tif (attrs.uploading || attrs.uploaded)\n\t\t\treturn;\n\t\tevent.preventDefault();\n\t\tevent.stopImmediatePropagation();\n\t\tif (attrs.spoiler) {\n\t\t\tthis.model.set({spoiler: 0});\n\t\t\treturn;\n\t\t}\n\t\tconst pick = common.pick_spoiler(attrs.nextSpoiler);\n\t\tthis.model.set({\n\t\t\tspoiler: pick.index,\n\t\t\tnextSpoiler: pick.next\n\t\t});\n\t},\n\tonAllocation(msg) {\n\t\tconst num = msg.num;\n\t\tstate.ownPosts[num] = num;\n\t\tthis.model.set({num: num});\n\t\tthis.flushPending();\n\t\tvar header = $(main.oneeSama.header(msg));\n\t\tthis.$meta.replaceWith(header);\n\t\tthis.$meta = header;\n\t\tif (!this.isThread)\n\t\t\tthis.$el.addClass('editing');\n\n\t\t/*\n\t\t TODO: Hide threads that are over THREADS_PER_PAGE. Also would need to be\n\t\t removed from syncs client and server-side. Hmm.\n\t\t */\n\n\t\tthis.$el.attr('id', 'p' + num);\n\n\t\tif (msg.image)\n\t\t\tthis.insertUploaded(msg.image);\n\n\t\tif (this.$uploadForm)\n\t\t\tthis.$uploadForm.append(this.$submit);\n\t\telse\n\t\t\tthis.$blockquote.after(this.$submit);\n\t\tif (this.isThread) {\n\t\t\tthis.$subject.siblings('label').andSelf().remove();\n\t\t\tthis.$blockquote.show();\n\t\t\tthis.resizeInput();\n\t\t\tthis.$input.focus();\n\t\t}\n\n\t\t/*\n\t\t Ensures you are nagged at by the browser, when navigating away from an\n\t\t unfinished allocated post.\n\t\t */\n\t\twindow.onbeforeunload = function() {\n\t\t\treturn \"You have an unfinished post.\";\n\t\t};\n\t},\n\t// Insert an image that has been uploaded and processed by the server\n\tinsertUploaded(info) {\n\t\tthis.renderImage(null, info);\n\t\tthis.$imageInput\n\t\t\t.siblings('strong')\n\t\t\t.andSelf()\n\t\t\t.remove();\n\t\tthis.$cancel.remove();\n\t\tthis.$uploadForm.find('#toggle').remove();\n\t\tthis.flushPending();\n\t\tthis.model.set({\n\t\t\tuploading: false,\n\t\t\tuploaded: true,\n\t\t\tsentAllocRequest: true\n\t\t});\n\n\t\t// Stop obnoxious wrap-around-image behaviour\n\t\tvar $img = this.$el.find('img');\n\t\tthis.$blockquote.css({\n\t\t\t'margin-left': $img.css('margin-right'),\n\t\t\t'padding-left': $img.width()\n\t\t});\n\n\t\tthis.resizeInput();\n\t},\n\t// Handle image upload status\n\tdispatch(msg) {\n\t\tconst a = msg.arg;\n\t\tswitch(msg.t) {\n\t\t\tcase 'alloc':\n\t\t\t\tthis.onImageAllocation(a);\n\t\t\t\tbreak;\n\t\t\tcase 'error':\n\t\t\t\tthis.uploadError(a);\n\t\t\t\tbreak;\n\t\t\tcase 'status':\n\t\t\t\tthis.uploadStatus(a);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tonImageAllocation(msg) {\n\t\tconst attrs = this.model.attributes;\n\t\tif (attrs.cancelled)\n\t\t\treturn;\n\t\tif (!attrs.num && !attrs.sentAllocRequest) {\n\t\t\tmain.send([common.INSERT_POST, this.allocationMessage(null, msg)]);\n\t\t\tthis.model.set({sentAllocRequest: true});\n\t\t}\n\t\telse\n\t\t\tmain.send([common.INSERT_IMAGE, msg]);\n\t},\n\tuploadError(msg) {\n\t\tif (this.model.get('cancelled'))\n\t\t\treturn;\n\t\tthis.model.set({\n\t\t\tuploadStatus: msg,\n\t\t\tuploading: false\n\t\t});\n\t\tif (this.$uploadForm)\n\t\t\tthis.$uploadForm.find('input[name=alloc]').remove();\n\t},\n\tuploadStatus(msg) {\n\t\tif (this.model.get('cancelled'))\n\t\t\treturn;\n\t\tthis.model.set('uploadStatus', msg);\n\t},\n\taddReference(num, sel) {\n\t\t// If a >>link exists, put this one on the next line\n\t\tvar val = this.$input.val();\n\t\tif (/^>>\\d+$/.test(val)) {\n\t\t\tthis.$input.val(val + '\\n');\n\t\t\tthis.onInput();\n\t\t\tval = this.$input.val();\n\t\t}\n\t\t// Quote selected text automatically\n\t\tif (sel) {\n\t\t\tsel = sel.split('\\n');\n\t\t\t// Prepend > to each line\n\t\t\tfor (let i = 0, len = sel.length; i < len; i++)\n\t\t\t\tsel[i] = '>' + sel[i];\n\t\t\tnum += '\\n' + sel.join('\\n') + '\\n';\n\t\t}\n\t\tthis.$input.val(val + '>>' + num);\n\t\tthis.$input[0].selectionStart = this.$input.val().length;\n\t\tthis.onInput();\n\t\tthis.$input.focus();\n\t},\n\tremove() {\n\t\tif (!this.preserve) {\n\t\t\tif (this.isThread)\n\t\t\t\tthis.$el.next('hr').remove();\n\t\t\tthis.$el.remove();\n\t\t}\n\t\tthis.$sizer.remove();\n\t\tif (this.$iframe) {\n\t\t\tthis.$iframe.remove();\n\t\t\tthis.$iframe = null;\n\t\t}\n\t\tthis.stopListening();\n\t\twindow.onbeforeunload = null;\n\t},\n\t// Extend with imager.js methods\n\trenderImage: imager.Hidamari.renderImage,\n\t// Overrides automatic image expansion, if any\n\tautoExpandImage() {\n\t\treturn this;\n\t},\n\tfun() {\n\t\t\n\t}\n});\nexports.ComposerView = ComposerView;\n\nfunction openPostBox(num) {\n\tpostSM.feed('new', document.query(`#p${num} aside.posting`));\n}\nmain.reply('openPostBox', openPostBox);\n\nwindow.addEventListener('message', function(event) {\n\tconst msg = event.data;\n\tif (msg !== 'OK' && postForm)\n\t\tpostForm.uploadError(msg);\n}, false);\n\nmain.$threads.on('click', 'a.quote', function(e) {\n\te.preventDefault();\n\n\t// TODO: Set highlighted post\n\n\t/*\n\t Make sure the selection both starts and ends in the quoted post's\n\t blockquote\n\t */\n\tconst post = e.target.closest('article, section'),\n\t\tgsel = getSelection(),\n\t\tnum = util.getNum(post);\n\n\tfunction isInside(prop) {\n\t\tconst el = gsel[prop] && gsel[prop].parentElement;\n\t\treturn  el\n\t\t\t&& el.closest('blockquote')\n\t\t\t&& el.closest('article, section') === post;\n\t}\n\n\tlet sel;\n\tif (isInside('baseNode') && isInside('focusNode'))\n\t\tsel = gsel.toString();\n\topenPostBox(util.getNum(post.closest('section')));\n\tpostForm.addReference(num, sel);\n});\n"],"sourceRoot":"/source/"}