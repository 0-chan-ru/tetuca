{"version":3,"sources":["options/opts.js"],"names":["System","register","_export","_context","toggleHeadStyle","id","css","toggle","document","getElementById","head","appendChild","parseEl","disabled","Cookie","thumbStyles","resonableLastN","config","isMobile","clientHash","langApplied","notMobile","opts","_arr","_i","engine","shorts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","short","setters","_vendorJsCookie","_util","_state","_lang","execute","type","lang","enabled","tab","default","execOnStart","exec","alert","location","reload","load","notifToggle","Notification","permission","requestPermission","radio","send","illyaDance","defaultCSS","theme","setAttribute","mediaURL","upload","validation","length","push","undefined","Symbol","iterator","next","done","value","err"],"mappings":"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","file":"options/opts.js","sourcesContent":["import * as Cookie from '../../vendor/js-cookie'\nimport {thumbStyles, resonableLastN, parseEl} from '../util'\nimport {config, isMobile, clientHash} from '../state'\nimport {langApplied} from 'lang'\n\n// TODO: Send function\n\n/*\n * Full schema of the option interface\n *\n * - id: Identifier of the option. Used for DOM element and localStorage tagging\n * - type: 'checkbox'/'number'/'image'/'shortCut'/array of options\n *\tarrays become a selection list. Defaults to 'checkbox', if omitted.\n * - default: Default value. false, if omitted.\n * - tab: Index of the tab the option belong to.\n * - exec: Function to execute on option change.\n * - execOnStart: Boolean. Should the function be executed on model population?\n *\tDefaults to true.\n * - load: Condition to display and execute the option. Defaults to true(always)\n * - validation: Function that validates the users input. Returns a boolean.\n * - hidden: If true this option won't be shown to the user. Defaults to false\n *\n * Tooltips and lables are defined per language in `lang/`.\n * All arguments except for `id` and `tab` are optional.\n */\n\nconst notMobile = !isMobile\n\nconst opts = [\n\t// LANGUAGE SELECTION\n\t{\n\t\tid: 'lang',\n\t\ttype: config.lang.enabled,\n\t\ttab: 0,\n\t\tdefault: config.lang.default,\n\t\texecOnStart: false,\n\t\texec(type) {\n\t\t\talert(langApplied)\n\t\t\tlocation.reload()\n\t\t}\n\t},\n\t// INLINE EXPANSION\n\t{\n\t\tid: 'inlinefit',\n\t\ttype: ['none', 'full', 'width', 'height', 'both'],\n\t\ttab: 1,\n\t\tdefault: 'width'\n\t},\n\t// THUMBNAIL MODE\n\t{\n\t\tid: 'thumbs',\n\t\ttype: thumbStyles,\n\t\ttab: 1,\n\t\tdefault: 'small'\n\t},\n\t// IMAGE HOVER EXPANSION\n\t{\n\t\tid: 'imageHover',\n\t\tdefault: true,\n\t\tload: notMobile,\n\t\ttab: 0\n\t},\n\t{\n\t\tid: 'webmHover',\n\t\tload: notMobile,\n\t\ttab: 0\n\t},\n\t// Autogif TOGGLE\n\t{\n\t\tid: 'autogif',\n\t\tload: notMobile,\n\t\ttab: 1\n\t},\n\t// SPOILER TOGGLE\n\t{\n\t\tid: 'spoilers',\n\t\ttab: 1,\n\t\tdefault: true\n\t},\n\t// LINKIFY TEXT URLS\n\t{\n\t\tid: 'linkify',\n\t\ttab: 0,\n\t\tdefault: true\n\t},\n\t// DESKTOP NOTIFICATIONS\n\t{\n\t\tid: 'notification',\n\t\tload: notMobile,\n\t\ttab: 0,\n\t\texec(notifToggle) {\n\t\t\tif (notifToggle && (Notification.permission !== \"granted\"))\n\t\t\t\tNotification.requestPermission()\n\t\t}\n\t},\n\t// ANONIMISE ALL POSTER NAMES\n\t{\n\t\tid: 'anonymise',\n\t\ttab: 0\n\t},\n\t// RELATIVE POST TIMESTAMPS\n\t{\n\t\tid: 'relativeTime',\n\t\ttab: 0,\n\t\tdefault: true\n\t},\n\t// R/A/DIO NOW PLAYING BANNER\n\t{\n\t\tid: 'nowPlaying',\n\t\tload: notMobile && config.radio,\n\t\ttab: 3,\n\t\tdefault: true,\n\t\texec(toggle) {\n\t\t\tif (toggle) {\n\t\t\t\t// Query the server for current stream info\n\t\t\t\tsend({type: 'radio'})\n\t\t\t} else {\n\n\t\t\t\t// TODO: System.import().then()\n\t\t\t\t//events.request('banner:radio:clear');\n\t\t\t}\n\t\t}\n\t},\n\t// ILLYA DANCE\n\t{\n\t\tid: 'illyaBGToggle',\n\t\tload: notMobile && config.illyaDance,\n\t\ttab: 3\n\t},\n\t{\n\t\tid: 'illyaMuteToggle',\n\t\tload: notMobile && config.illyaDance,\n\t\ttab: 3\n\t},\n\t// HORIZONTAL POSTING\n\t{\n\t\tid: 'horizontalPosting',\n\t\ttab: 3,\n\t\texec: toggleHeadStyle(\n\t\t\t'horizontal',\n\t\t\t'article,aside{display:inline-block;}'\n\t\t)\n\t},\n\t// REPLY AT RIGHT\n\t{\n\t\tid: 'replyright',\n\t\ttab: 1,\n\t\texec: toggleHeadStyle(\n\t\t\t'reply-at-right',\n\t\t\t'section>aside{margin: -26px 0 2px auto;}'\n\t\t)\n\t},\n\t// THEMES\n\t{\n\t\tid: 'theme',\n\t\ttype: [\n\t\t\t'moe', 'gar', 'mawaru', 'moon', 'ashita', 'console', 'tea',\n\t\t\t'higan', 'ocean', 'rave', 'tavern', 'glass'\n\t\t],\n\t\ttab: 1,\n\t\tdefault: config.defaultCSS,\n\t\texecOnStart: false,\n\t\texec(theme) {\n\t\t\tif (!theme) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdocument.getElementById('theme')\n\t\t\t\t.setAttribute(\n\t\t\t\t\t'href',\n\t\t\t\t\t`${config.mediaURL}css/${theme}.css?v=${clientHash}`\n\t\t\t\t)\n\t\t}\n\t},\n\t// CUSTOM USER-SET BACKGROUND\n\t{\n\t\tid: 'userBG',\n\t\tload: notMobile,\n\t\ttab: 1\n\t},\n\t{\n\t\tid: 'userBGimage',\n\t\tload: notMobile,\n\t\ttype: 'image',\n\t\ttab: 1,\n\t\texecOnStart: false,\n\t\texec(upload) {\n\t\t\t// TODO: System.import().then()\n\t\t\t//events.request('background:store', upload)\n\t\t}\n\t},\n\t// LAST N CONFIG\n\t{\n\t\tid: 'lastn',\n\t\ttype: 'number',\n\t\ttab: 0,\n\t\tvalidation: resonableLastN,\n\t\tdefault: 100\n\t},\n\t// KEEP THREAD LENGTH WITHIN LASTN\n\t/*\n\t Disabled, until dependancy features are implemnted (see issue #280)\n\t{\n\t\tid: 'postUnloading',\n\t\ttab: 0\n\t},*/\n\t// LOCK TO BOTTOM EVEN WHEN DOCUMENT HIDDEN\n\t{\n\t\tid: 'alwaysLock',\n\t\ttab: 0\n\t}\n]\n\n// IMAGE SEARCH LINK TOGGLE\nfor (let engine of ['google', 'iqdb', 'saucenao', 'desustorage', 'exhentai']) {\n\topts.push({\n\t\tid: engine,\n\t\t// Use a custom internatiolisation function\n\t\tlang: 'imageSearch',\n\t\ttab: 2,\n\t\tdefault: engine === 'google',\n\t\texec: toggleHeadStyle(engine + 'Toggle', `.${engine}{display:initial;}`)\n\t})\n}\n\n// SHORTCUT KEYS\nconst shorts = [\n\t{id: 'new', default: 78},\n\t{id: 'togglespoiler', default: 73},\n\t{id: 'textSpoiler', default: 68},\n\t{id: 'done', default: 83},\n\t{id: 'expandAll', default: 69},\n\t{id: 'workMode', default: 66}\n]\nfor (let short of shorts) {\n\tshort.type = 'shortcut'\n\tshort.tab = 4\n\tshort.load = notMobile\n\topts.push(short)\n}\n\n/**\n * Create a function to append and toggle a style element in <head>\n */\nfunction toggleHeadStyle(id, css) {\n\treturn toggle => {\n\t\tif (!document.getElementById(id)) {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tparseEl(`<style id=\"${id}\">${css}</style>`)\n\t\t\t)\n\t\t}\n\n\t\t// The disabled property only exists on elements in the DOM, so we do\n\t\t// another query\n\t\tdocument.getElementById(id).disabled = !toggle\n\t}\n}\n\n/**\n * Exports the generated option model templates\n */\nexport default opts\n"],"sourceRoot":"/source/"}