{"version":3,"sources":["options/view.js"],"names":["System","register","_export","_context","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","BannerModal","renderContents","optionModels","each","find","options","_importConfigs","_createClass","OptionsPanel","setters","_modal","_render","_models","_vendorUnderscore","_options","_lang","importConfigs","execute","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_BannerModal","this","_this","getPrototypeOf","id","onClick",".tab_link","#export","#import","#hidden","onAll","el","innerHTML","assignValues","hidden","query","model","type","val","get","checked","Array","String","fromCharCode","toUpperCase","event","preventDefault","children","classList","remove","add","lastChild","li","contains","getAttribute","undefined","parseInt","charCodeAt","validate","set","a","document","getElementById","setAttribute","window","URL","createObjectURL","Blob","JSON","stringify","localStorage","click","util","once","reader","FileReader","readAsText","input","files","onload","json","parse","result","err","alert","corrupt","clear","location","reload","count","textContent","replace","main","request","renderHidden","tick","clicked","style","opacity","out","now","requestAnimationFrame","optionsSeen","addEventListener"],"mappings":"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","file":"options/view.js","sourcesContent":["import {BannerModal} from '../modal'\nimport renderContents from './render'\nimport optionModels from './models'\nimport {each, find} from '../../vendor/underscore'\nimport options from '../options'\nimport {importConfigs} from 'lang'\n\n// View of the options panel\nexport default class OptionsPanel extends BannerModal {\n\tconstructor() {\n\t\tsuper({id: 'options-panel'})\n\t\tthis.onClick({\n\t\t\t'.tab_link': 'switchTab',\n\t\t\t'#export': 'exportConfigs',\n\t\t\t'#import': 'importConfigs',\n\t\t\t'#hidden': 'clearHidden'\n\t\t})\n\t\tthis.onAll('change', 'applyChange')\n\t}\n\n\t// Render the contents of the options panel and insert it into the DOM\n\trender() {\n\t\tthis.el.innerHTML = renderContents()\n\t\tthis.assignValues()\n\t\tthis.hidden = this.el.query('#hidden')\n\n\t\t// TODO: Hidden posts count rendering\n\t\t// events.reply('hide:render', this.renderHidden, this)\n\t}\n\n\t// Assign loaded option settings to the respective elements in the options\n\t// panel\n\tassignValues() {\n\t\tfor (let id in optionModels) {\n\t\t\tconst model = optionModels[id],\n\t\t\t\tel = this.el.query('#' + id)\n\t\t\tconst {type} = model,\n\t\t\t\tval = model.get()\n\t\t\tif (type === 'checkbox') {\n\t\t\t\tel.checked = val\n\t\t\t} else if (type === 'number' || type instanceof Array) {\n\t\t\t\tel.value = val\n\t\t\t} else if (type === 'shortcut') {\n\t\t\t\tel.value = String.fromCharCode(val).toUpperCase()\n\t\t\t}\n\n\t\t\t// 'image' type simply falls through, as those don't need to be set\n\t\t}\n\t}\n\n\t// Switch to a tab, when clicking the tab butt\n\tswitchTab(event) {\n\t\tevent.preventDefault()\n\t\tconst el = event.target\n\n\t\t// Deselect previous tab\n\t\teach(this.el.children, el =>\n\t\t\tel.query('.tab_sel').classList.remove('tab_sel'))\n\n\t\t// Select the new one\n\t\tel.classList.add('tab_sel')\n\t\tfind(this.el.lastChild.children, li =>\n\t\t\tli.classList.contains(el.getAttribute('data-content'))\n\t\t)\n\t\t\t.classList.add('tab_sel')\n\t}\n\n\t// Propagate options panel changes through\n\t// options -> optionModels -> localStorage\n\tapplyChange(event) {\n\t\tconst el = event.target,\n\t\t\tid = el.getAttribute('id'),\n\t\t\tmodel = optionModels[id]\n\t\tlet val\n\t\tswitch (model.type) {\n\t\t\tcase 'checkbox':\n\t\t\t\tval = el.checked\n\t\t\t\tbreak\n\t\t\tcase 'number':\n\t\t\t\tval = parseInt(el.value)\n\t\t\t\tbreak\n\n\t\t\t/*\n\t\t\tTODO: System.import().then()\n\t\t\tcase 'image':\n\t\t\t\t// Not recorded. Extracted directly by the background handler.\n\t\t\t\treturn events.request('background:store', event.target)\n\t\t\t*/\n\n\t\t\tcase 'shortcut':\n\t\t\t\tval = el.value.toUpperCase().charCodeAt(0)\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tval = el.value\n\t\t}\n\n\t\tif (!model.validate(val)) {\n\t\t\tel.value = ''\n\t\t} else {\n\t\t\toptions.set(id, val)\n\t\t}\n\t}\n\n\t// Dump options to JSON file and upload to user\n\texportConfigs() {\n\t\tconst a = document.getElementById('export')\n\t\ta.setAttribute('href', window.URL\n\t\t\t.createObjectURL(new Blob([JSON.stringify(localStorage)], {\n\t\t\t\ttype: 'octet/stream'\n\t\t\t}))\n\t\t)\n\t\ta.setAttribute('download', 'meguca-config.json')\n\t}\n\n\t// Import options from uploaded JSON file\n\timportConfigs(event) {\n\t\t// Proxy to hidden file input\n\t\tevent.preventDefault()\n\t\tconst el = document.query('#importSettings')\n\t\tel.click()\n\t\tutil.once(el, 'change', () => {\n\t\t\tvar reader = new FileReader()\n\t\t\treader.readAsText(input.files[0])\n\t\t\treader.onload = event => {\n\t\t\t\t// In case of curruption\n\t\t\t\tlet json\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(event.target.result)\n\t\t\t\t}\n\t\t\t\tcatch(err) {\n\t\t\t\t\talert(importConfigs.corrupt)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlocalStorage.clear()\n\t\t\t\tfor (let key in json) {\n\t\t\t\t\tlocalStorage[key] = json[key]\n\t\t\t\t}\n\t\t\t\talert(importConfigs.corrupt)\n\t\t\t\tlocation.reload()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Render Hiden posts counter\n\trenderHidden(count) {\n\t\tconst el = this.hidden\n\t\tel.textContent = el.textContent.replace(/\\d+$/, count)\n\t}\n\n\t// Clear displayed hidden post counter\n\tclearHidden() {\n\t\tmain.request('hide:clear')\n\t\tthis.renderHidden(0)\n\t}\n}\n\n// Highlight options button by fading out and in, if no options are set\n(function() {\n\tif (localStorage.optionsSeen) {\n\t\treturn\n\t}\n\tconst el = document.query('#options')\n\tel.style.opacity = 1\n\tlet out = true,\n\t\tclicked\n\tel.addEventListener(\"click\", () => {\n\t\tclicked = true\n\t\tlocalStorage.optionsSeen = 1\n\t})\n\ttick()\n\n\tfunction tick() {\n\t\t// Stop\n\t\tif (clicked) {\n\t\t\tel.style.opacity = 1\n\t\t\treturn\n\t\t}\n\n\t\tel.style.opacity = +el.style.opacity + (out ? -0.02 : 0.02)\n\t\tconst now = +el.style.opacity\n\n\t\t// Reverse direction\n\t\tif ((out && now <= 0) || (!out && now >= 1)) {\n\t\t\tout = !out\n\t\t}\n\t\trequestAnimationFrame(tick)\n\t}\n})()\n"],"sourceRoot":"/source/"}