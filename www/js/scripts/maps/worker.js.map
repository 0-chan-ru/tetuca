{"version":3,"sources":["worker.js"],"names":["fetchConfig","fetch","then","res","json","self","config","importScripts","oninstall","event","waitUntil","initModuleLoader","legacy","System","onactivate","Promise","all","clients","claim"],"mappings":"AAmBA,QAASA,eACL,MAAOC,OAAM,eAAeC,KAAK,SAAUC,GACvC,MAAOA,GAAIC,SACZF,KAAK,SAAUE,GACdC,KAAKC,OAASF,IAnBtBG,cAAc,2BAA4B,mCAE1CF,KAAKG,UAAY,SAAUC,GACvBA,EAAMC,UAAUL,KAAKM,mBAAmBT,KAAK,SAAUU,GACnD,MAAOC,QAAAA,UAAc,MAAQD,EAAS,EAAI,GAAK,oBAIvDP,KAAKS,WAAa,SAAUL,GACxBA,EAAMC,UAAUK,QAAQC,KACpBhB,cACAK,KAAKY,QAAQC","file":"worker.js","sourcesContent":["/*\n Loads the service worker using SystemJS\n*/\n\nimportScripts(\"/ass/js/vendor/system.js\", \"/ass/js/scripts/loaderCommon.js\")\n\nself.oninstall = function (event) {\n    event.waitUntil(self.initModuleLoader().then(function (legacy) {\n        return System.import(\"es\" + (legacy ? 5 : 6) + \"/worker/main\")\n    }))\n}\n\nself.onactivate = function (event) {\n    event.waitUntil(Promise.all([\n        fetchConfig(),\n        self.clients.claim()\n    ]))\n}\n\nfunction fetchConfig() {\n    return fetch(\"/api/config\").then(function (res) {\n        return res.json()\n    }).then(function (json) {\n        self.config = json\n    })\n}\n"],"sourceRoot":"/source/"}