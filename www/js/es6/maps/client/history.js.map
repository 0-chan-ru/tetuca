{"version":3,"sources":["client/history.js"],"names":[],"mappings":"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","file":"client/history.js","sourcesContent":["/*\n * Inter board/page/thread navigation with HTML5 history\n */\n\nlet main = require('./main'),\n\t{$, _, common, Extract, state} = main;\n\n// Click handler for post/thread/board links\nmain.$doc.on ('click', 'a.history', function(event) {\n\tif (event.ctrlKey)\n\t\treturn;\n\treadingSteiner(this.href, event);\n});\n\n// Loading status GIF\nlet $loading = $('#loadingImage');\nmain.reply('loading:show', () => $loading.show());\nmain.reply('loading:hide', () => $loading.hide());\n\n// Navigate to the URL\nfunction readingSteiner(url, event) {\n\tlet nextState = state.read(url);\n\t// Does the link point to the same page as this one?\n\tif (_.isMatch(state.page.attributes, nextState))\n\t\treturn;\n\n\t// Disconnect server-side Yakusoku in preparation for navigating away.\n\t// This helps avoid duplicate messages mid-navigation.\n\tmain.request('connection:lock');\n\n\tif (event)\n\t\tevent.preventDefault();\n\n\t// Deal with hashes and query strings\n\tconst split = url.split('#');\n\tlet address = split[0] + (/\\?/.test(split[0]) ? '&' : '?') + 'minimal=true';\n\tif (split.length !== 1)\n\t\taddress += '#' + split[1];\n\n\t/*\n\t * Fetch new DOM from the server\n\t * Decided to go withthout dedicated caching and use etags for browser\n\t * cache verification.\n\t */\n\t$loading.show();\n\tconst xhr = new XMLHttpRequest();\n\txhr.open('GET', address);\n\txhr.onload = function () {\n\t\t// In case the thread is dead, moderatator cookie expired or some\n\t\t// other shenanigans\n\t\tif (this.status !== 200) {\n\t\t\t$loading.hide()\n\t\t\treturn alert(this.status)\n\t\t}\n\n\t\t// Was redirected to different thread/board\n\t\tif (baseURL(url) !== baseURL(this.responseURL))\n\t\t\tnextState = state.read(this.responseURL);\n\t\tmain.request('postSM:feed', 'done');\n\t\tmain.trigger('state:clear');\n\n\t\t// Apply new DOM and load models\n\t\tmain.$threads[0].innerHTML = this.response;\n\n\t\t// Set new page state\n\t\tstate.page.set(nextState);\n\n\t\t// Reconfigure rendering singleton\n\t\tmain.oneeSama.op = nextState.thread;\n\t\tnew Extract(nextState.catalog);\n\n\t\t// Swap the database controller server-side. Catalog does not use a\n\t\t// Yakusoku(), so not needed.\n\t\tif (!nextState.catalog) {\n\t\t\tmain.request('connection:unlock', [common.RESYNC, nextState.board,\n\t\t\t\tstate.syncs, nextState.live]);\n\t\t}\n\n\t\tif (event) {\n\t\t\thistory.pushState(null, null, nextState.href);\n\n\t\t\t// Scroll to top on new pages with no hashes\n\t\t\tif (location.hash)\n\t\t\t\tmain.request('scroll:aboveBanner');\n\t\t\telse\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t}\n\t\t$loading.hide();\n\t};\n\txhr.send();\n}\n\nfunction baseURL(url) {\n\treturn url.split(/[\\?#]/)[0];\n}\n\n// For back and forward history events\nwindow.onpopstate = function(event) {\n\treadingSteiner(event.target.location.href);\n\tmain.request('scroll:aboveBanner');\n};\n"],"sourceRoot":"/source/"}