{"version":3,"sources":["client/client.js"],"names":[],"mappings":"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","file":"client/client.js","sourcesContent":["/*\n * Handles the brunt of the post-related websocket calls\n */\n\nconst main = require('./main'),\n\t{_, common, dispatcher, util, posts, state} = main;\n\nconst online = document.query('#onlineCount');\n\n_.extend(dispatcher, {\n\t[common.INSERT_POST](message) {\n\t\tlet [msg, bump] = message;\n\t\tbump = bump && state.page.get('live');\n\t\tconst isThread = !msg.op,\n\t\t\t{num} = msg;\n\t\tif (isThread)\n\t\t\tstate.syncs[num] = 1;\n\t\tmsg.editing = true;\n\n\t\t// Did I create this post?\n\t\tlet el;\n\t\tconst {nonce} = msg;\n\t\tdelete msg.nonce;\n\t\tconst myNonce = main.request('nonce:get')[nonce];\n\t\tif (myNonce && myNonce.tab === state.page.get('tabID')) {\n\t\t\t// posted in this tab; transform placeholder\n\t\t\tstate.ownPosts[num] = true;\n\t\t\tmain.oneeSama.trigger('insertOwnPost', msg);\n\t\t\tmain.postSM.feed('alloc', msg);\n\t\t\tbump = false;\n\t\t\tmain.request('nonce:destroy', nonce);\n\n\t\t\t// if we've already made a placeholder for this post, use it\n\t\t\tconst postForm = main.request('postForm');\n\t\t\tif (postForm && postForm.el)\n\t\t\t\tel = postForm.el;\n\t\t}\n\n\t\t// Add to my post set. Separate `if`, so posts form other tabs also\n\t\t// register.\n\t\tif (myNonce) {\n\t\t\tmsg.mine = true;\n\t\t\tstate.mine.write(num);\n\t\t}\n\t\tstate.addLinks(msg.links);\n\n\t\t// Create model\n\t\tconst model = new posts.models[isThread ? 'Thread' : 'Post'](msg);\n\t\tconst view = new posts[isThread ? 'Section' : 'Article']({model, el,\n\t\t\tid: num});\n\t\tif (!el)\n\t\t\tview.render().insertIntoDOM();\n\t\tview.clientInit();\n\n\t\tcheckRepliedToMe(msg.links, num);\n\t\tmain.request('post:inserted', model);\n\n\t\tif (isThread)\n\t\t\treturn;\n\t\tconst parent = state.posts.get(msg.op);\n\t\tif (!parent)\n\t\t\treturn;\n\t\tparent.get('replies').push(num);\n\t\tif (state.page.get('thread'))\n\t\t\treturn;\n\t\tparent.dispatch('shiftReplies');\n\n\t\t// Bump thread to page top\n\t\tif (bump)\n\t\t\tparent.dispatch('bumpThread');\n\t},\n\t[common.INSERT_IMAGE](msg) {\n\t\tconst [num, img] = msg;\n\n\t\t// Did I just upload this?\n\t\tconst postModel = main.request('postModel'),\n\t\t\ttoPostForm = postModel && postModel.get('num') == num;\n\t\tif (toPostForm)\n\t\t\tmain.request('postForm').insertUploaded(img);\n\n\t\t// If the image gets inseted into the postForm, we don't need the\n\t\t// generic model to fire a separate image render\n\t\tmodelHandler(num, model => model.setImage(img, toPostForm));\n\t},\n\t[common.UPDATE_POST]([num, frag, extra = {}]) {\n\t\tmodelHandler(num, model => {\n\t\t\tstate.addLinks(extra.links);\n\t\t\tmodel.update(frag, extra);\n\t\t\tcheckRepliedToMe(extra.links, num);\n\n\t\t\t// Am I updating my own post?\n\t\t\tif (num in state.ownPosts)\n\t\t\t\tmain.oneeSama.trigger('insertOwnPost', extra);\n\t\t\telse\n\t\t\t\tmodel.dispatch('updateBody', frag);\n\t\t});\n\t},\n\t[common.FINISH_POST](msg) {\n\t\tconst [num] = msg;\n\t\tdelete state.ownPosts[num];\n\t\tmodelHandler(num, function (model) {\n\t\t\t// No change event listener to avoid extra overhead\n\t\t\tmodel.set('editing', false);\n\t\t\tmodel.dispatch('renderEditing', false);\n\t\t});\n\t},\n\t[common.DELETE_POSTS](msg) {\n\t\tmodelHandler(msg[0], model => model.deletePost(msg[1]));\n\t},\n\t[common.LOCK_THREAD](msg) {\n\t\tmodelHandler(msg[0], model => model.toggleLocked(true, msg[1]));\n\t},\n\t[common.UNLOCK_THREAD](msg) {\n\t\tmodelHandler(msg[0], model => model.toggleLocked(false, msg[1]));\n\t},\n\t[common.DELETE_IMAGES](msg) {\n\t\tmodelHandler(msg[0], model => model.removeImage(msg[1]));\n\t},\n\t[common.SPOILER_IMAGES](msg) {\n\t\tmodelHandler(msg[0], model => model.setSpoiler(msg[1], msg[2]));\n\t},\n\t[common.BAN](msg) {\n\t\t// Only a 0 is passed to unauthenticated clients, if the ban was not\n\t\t// set to be displayed publicly. Otherwise a post number. A side\n\t\t// effect of complying to the existing pub/sub spec. Authenticated\n\t\t// staff receive either a post number or 0 and detailed ban information.\n\t\tlet [num, info] = msg;\n\t\tif (!num) {\n\t\t\tif (!info)\n\t\t\t\treturn;\n\t\t\tinfo = JSON.parse(info);\n\t\t\tnum = info.num;\n\t\t}\n\t\tmodelHandler(num, model => model.setBan(num, info));\n\t},\n\t[common.BACKLINK](msg) {\n\t\tmodelHandler(msg[0], model => model.addBacklink(msg[1], msg[2]));\n\t},\n\t[common.ONLINE_COUNT](msg) {\n\t\tonline.textContent = '['+msg[0]+']';\n\t},\n\t// Sync settings with server\n\t[common.HOT_INJECTION](msg) {\n\t\tconst [force, hash, hotConfig] = msg;\n\n\t\t// Request new varibles, if hashes don't match\n\t\tif (!force && hash !== state.configHash)\n\t\t\tmain.send([common.HOT_INJECTION, true]);\n\t\t// Update variables and hash\n\t\telse if (force) {\n\t\t\tstate.configHash = hash;\n\t\t\tstate.hotConfig.set(hotConfig);\n\t\t}\n\t}\n});\n\ndispatcher[common.SYNCHRONIZE] = main.connSM.feeder('sync');\ndispatcher[common.INVALID] = main.connSM.feeder('invalid');\n\n// Check if new posts links to one of my posts\nfunction checkRepliedToMe(links, sourceNum) {\n\tif (!links)\n\t\treturn;\n\tconst mine = state.mine.readAll();\n\tfor (let num in links) {\n\t\tif (num in mine)\n\t\t\tmain.request('repliedToMe', sourceNum);\n\t}\n}\n\n// Find model and pass it to function, if it exists\nfunction modelHandler(num, func) {\n\tconst model = state.posts.get(num);\n\tif (model)\n\t\tfunc(model);\n}\n\n// Make the text spoilers toggle revealing on click\nutil.listener(document, 'click', 'del', function (event) {\n\tif (event.spoilt)\n\t\treturn;\n\tevent.spoilt = true;\n\tevent.target.classList.toggle('reveal');\n});\n"],"sourceRoot":"/source/"}