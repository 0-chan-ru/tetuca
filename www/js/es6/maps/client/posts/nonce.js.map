{"version":3,"sources":["client/posts/nonce.js"],"names":[],"mappings":"iGAII,SAAO,QAAQ,SAAR,CAAP,KACF,OAAiB,KAAjB,WAAQ,MAAS,KAAT,MAEV,IAAI,WAAa,EAAb,CAEJ,SAAS,GAAT,EAAe,CACd,IAAI,MAAJ,CADc,GAEV,OAAO,YAAP,CAAqB,CACxB,GAAI,CACH,OAAS,KAAK,KAAL,CAAW,aAAa,UAAb,CAApB,CADG,CAAJ,MAGO,CAAP,CAAU,EAAV,CAJD,KAOC,OAAS,UAAT,CAPD,OAQO,QAAU,EAAV,CAVO,CAAf,IAYA,CAAK,KAAL,CAAW,WAAX,CAAwB,GAAxB,EAEA,SAAS,WAAT,CAAqB,MAArB,CAA6B,CAC5B,GAAI,OAAO,YAAP,CACH,aAAa,UAAb,CAA0B,KAAK,SAAL,CAAe,MAAf,CAA1B,CADD,KAGC,WAAa,MAAb,CAHD,CADD,SAOS,QAAT,EAAoB,CACnB,OAAO,KAAK,KAAL,CAAW,KAAK,GAAL,IAAc,KAAK,EAAL,CAAQ,EAAR,CAAW,EAAX,CAAd,CAAlB,CADmB,CAApB,SAIS,MAAT,EAAkB,CACjB,MAAM,OAAS,KAAT,CACL,MAAQ,OAAO,QAAP,CAAgB,EAAhB,CAAR,CAFgB,MAGjB,CAAO,KAAP,EAAgB,CACf,IAAK,MAAM,IAAN,CAAW,GAAX,CAAe,OAAf,CAAL,CACA,IAAK,UAAL,CAFD,CAHiB,WAOjB,CAAY,MAAZ,EAPiB,OAQV,KAAP,CARiB,CAAlB,IAUA,CAAK,KAAL,CAAW,cAAX,CAA2B,MAA3B,EAGA,WAAW,UAAW,CACrB,GAAI,CAAC,OAAO,YAAP,CACJ,OADD,IAGI,OAAS,KAAT,CAJiB,IAOjB,OAAJ,CAPqB,MAQf,UAAY,WAAa,CAAb,CARG,IAShB,IAAI,KAAJ,IAAa,MAAlB,CAA0B,CACzB,GAAI,OAAO,KAAP,EAAc,GAAd,EAAqB,SAArB,CACH,SADD,OAEO,OAAO,KAAP,CAAP,CAHyB,OAIzB,CAAU,IAAV,CAJyB,CAA1B,GAOI,OAAJ,CACC,YAAY,MAAZ,EADD,CAhBU,CAkBR,KAAK,KAAL,CAAW,KAAK,MAAL,GAAc,IAAd,CAlBd,EAoBA,SAAS,OAAT,CAAiB,KAAjB,CAAwB,CAEvB,WAAW,UAAW,CACrB,IAAI,OAAS,KAAT,CADiB,GAEjB,CAAC,OAAO,KAAP,CAAD,CACH,OADD,OAEO,OAAO,KAAP,CAAP,CAJqB,WAKrB,CAAY,MAAZ,EALqB,CAAX,CAMR,KANH,EAFuB,CAAxB,IAUA,CAAK,KAAL,CAAW,eAAX,CAA4B,OAA5B","file":"client/posts/nonce.js","sourcesContent":["/*\nCryptographic nonces for websocket transactions\n */\n\nlet main = require('../main'),\n\t{common, state} = main;\n\nlet nonceCache = {};\n\nfunction get() {\n\tvar nonces;\n\tif (window.localStorage) {\n\t\ttry {\n\t\t\tnonces = JSON.parse(localStorage.postNonces);\n\t\t}\n\t\tcatch (e) {}\n\t}\n\telse\n\t\tnonces = nonceCache;\n\treturn nonces || {};\n}\nmain.reply('nonce:get', get);\n\nfunction save_nonces(nonces) {\n\tif (window.localStorage)\n\t\tlocalStorage.postNonces = JSON.stringify(nonces);\n\telse\n\t\tnonceCache = nonces;\n}\n\nfunction today_id() {\n\treturn Math.floor(Date.now() / (1000*60*60*24));\n}\n\nfunction create() {\n\tconst nonces = get(),\n\t\tnonce = common.randomID(32);\n\tnonces[nonce] = {\n\t\ttab: state.page.get('tabID'),\n\t\tday: today_id()\n\t};\n\tsave_nonces(nonces);\n\treturn nonce;\n}\nmain.reply('nonce:create', create);\n\n// Expire old nonces\nsetTimeout(function() {\n\tif (!window.localStorage)\n\t\treturn;\n\t// we need a lock on postNonces really\n\tlet nonces = get();\n\n\t// people messing with their system clock will mess with expiry, doh\n\tlet changed;\n\tconst yesterday = today_id() - 1;\n\tfor (let nonce in nonces) {\n\t\tif (nonces[nonce].day >= yesterday)\n\t\t\tcontinue;\n\t\tdelete nonces[nonce];\n\t\tchanged = true;\n\t}\n\n\tif (changed)\n\t\tsave_nonces(nonces);\n}, Math.floor(Math.random()*5000));\n\nfunction destroy(nonce) {\n\t// delete only after a delay so all tabs notice that it's ours\n\tsetTimeout(function() {\n\t\tlet nonces = get();\n\t\tif (!nonces[nonce])\n\t\t\treturn;\n\t\tdelete nonces[nonce];\n\t\tsave_nonces(nonces);\n\t}, 10000);\n}\nmain.reply('nonce:destroy', destroy);\n"],"sourceRoot":"/source/"}