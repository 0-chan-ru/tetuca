{"version":3,"sources":["client/view.js"],"names":[],"mappings":"oIAAO,6CACC,gDAGO,MAAM,IAAN,CAId,YAAY,IAAZ,CAAkB,CACjB,OAAO,IAAP,CAAa,IAAb,EADiB,GAEb,CAAC,KAAK,KAAL,CAAY,CAChB,KAAK,KAAL,CAAa,IAAI,KAAJ,EAAb,CADgB,CAAjB,IAGA,CAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EALiB,GAQb,CAAC,KAAK,EAAL,CAAS,CACb,MAAM,GAAK,KAAK,EAAL,CAAU,SAAS,aAAT,CAAuB,KAAK,GAAL,EAAY,KAAZ,CAAjC,CADE,IAIR,IAAI,GAAJ,IAAW,CAAC,IAAD,CAAO,OAAP,CAAhB,CAAiC,CAChC,GAAI,OAAO,IAAP,CAAa,CAChB,GAAG,YAAH,CAAgB,GAAhB,CAAqB,KAAK,GAAL,CAArB,EADgB,CAAjB,CADD,CAJD,CARD,MAsBA,EAAS,CACR,KAAK,EAAL,CAAQ,MAAR,GADQ,IAER,CAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAFQ,OAGD,KAAK,KAAL,CAHC,CAAT,EAOA,CAAG,IAAH,CAAS,QAAT,CAAmB,EAAnB,CAAuB,CACtB,KAAK,EAAL,CAAQ,gBAAR,CAAyB,IAAzB,CAA+B,SAAS,CACvC,GAAI,MAAM,MAAN,CAAa,OAAb,EAAwB,MAAM,MAAN,CAAa,OAAb,CAAqB,QAArB,CAAxB,CAAwD,CAC3D,GAAG,KAAH,EAD2D,CAA5D,CAD8B,CAA/B,CADsB,CAAvB,OAUA,CAAQ,MAAR,CAAgB,CACf,IAAK,IAAI,QAAJ,IAAgB,MAArB,CAA6B,CAC5B,KAAK,EAAL,CAAQ,OAAR,CAAiB,QAAjB,CAA2B,OAAO,QAAP,CAA3B,EAD4B,CAA7B,CADD,KAOA,CAAM,IAAN,CAAY,EAAZ,CAAgB,CACf,KAAK,EAAL,CAAQ,gBAAR,CAAyB,IAAzB,CAA+B,EAA/B,EADe,CAAhB,IAKA,CAAK,IAAL,CAAW,QAAX,CAAqB,EAArB,CAAyB,CACxB,KAAK,EAAL,CAAQ,gBAAR,CAAyB,IAAzB,CAA+B,SAAS,CACvC,GAAI,MAAM,MAAN,CAAa,OAAb,EAAwB,MAAM,MAAN,CAAa,OAAb,CAAqB,QAArB,CAAxB,CAAwD,CAC3D,GAAG,KAAH,EAD2D,IAE3D,CAAK,EAAL,CAAQ,mBAAR,CAA4B,IAA5B,CAAkC,EAAlC,EAF2D,CAA5D,CAD8B,CAA/B,CADwB,CAAzB,OAUA,CAAQ,IAAR,CAAc,EAAd,CAAkB,CACjB,KAAK,EAAL,CAAQ,gBAAR,CAAyB,IAAzB,CAA+B,SAAS,CACvC,GAAG,KAAH,EADuC,IAEvC,CAAK,EAAL,CAAQ,mBAAR,CAA4B,IAA5B,CAAkC,EAAlC,EAFuC,CAAT,CAA/B,CADiB,CAAlB,CAjEc,kBAAM","file":"client/view.js","sourcesContent":["import Model from './model'\nimport {extend} from 'underscore'\n\n// Generic view class, that all over view classes extend\nexport default class View {\n\t// Creates a new View and binds it to the target model. If none, creates a\n\t// blank model. If no element suplied, creates a new one from tags. Sets\n\t// some other default variables.\n\tconstructor(args) {\n\t\textend(this, args)\n\t\tif (!this.model) {\n\t\t\tthis.model = new Model()\n\t\t}\n\t\tthis.model.attach(this)\n\n\t\t// Create element, if none\n\t\tif (!this.el) {\n\t\t\tconst el = this.el = document.createElement(this.tag || 'div')\n\n\t\t\t// Set element attributes, if any\n\t\t\tfor (let key of ['id', 'class']) {\n\t\t\t\tif (key in args) {\n\t\t\t\t\tel.setAttribute(key, args[key])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove the element from the DOM and detach from its model, allowing the\n\t// View instance to be garbage collected.\n\tremove() {\n\t\tthis.el.remove()\n\t\tthis.model.detach(this)\n\t\tdelete this.model\n\t}\n\n\t// Add selector-specific event listeners to the view\n\ton(type, selector, fn) {\n\t\tthis.el.addEventListener(type, event => {\n\t\t\tif (event.target.matches && event.target.matches(selector)) {\n\t\t\t\tfn(event)\n\t\t\t}\n\t\t})\n\t}\n\n\t// Shorthand for adding multiple click event listeners as an object.\n\t// We use those the most, so nice to have.\n\tonClick(events) {\n\t\tfor (let selector in events) {\n\t\t\tthis.on('click', selector, events[selector])\n\t\t}\n\t}\n\n\t// Add event listener to view's element, whithout filtering by selector\n\tonAll(type, fn) {\n\t\tthis.el.addEventListener(type, fn)\n\t}\n\n\t// Add selector-specific event listener, that will execute only once\n\tonce(type, selector, fn) {\n\t\tthis.el.addEventListener(type, event => {\n\t\t\tif (event.target.matches && event.target.matches(selector)) {\n\t\t\t\tfn(event)\n\t\t\t\tthis.el.removeEventListener(type, fn)\n\t\t\t}\n\t\t})\n\t}\n\n\t// Add event listener, that will execute only once\n\tonceAll(type, fn) {\n\t\tthis.el.addEventListener(type, event => {\n\t\t\tfn(event)\n\t\t\tthis.el.removeEventListener(type, fn)\n\t\t})\n\t}\n}\n"],"sourceRoot":"/source/"}