{"version":3,"sources":["client/amusement.js"],"names":[],"mappings":"6pBAIM,WAAO,QAAQ,QAAR,CAAP,OACJ,EAA8B,KAA9B,QAAG,OAA2B,KAA3B,aAAQ,MAAmB,KAAnB,YAAO,SAAY,KAAZ,SAGpB,SAAS,IAAT,CAAc,QAAd,CAAwB,SAAU,MAAV,CAAkB,CACzC,OAAO,SAAP,CAAmB,SAAU,GAAV,CAAe,CACjC,MAAM,OAAS,KAAK,QAAL,CAAc,IAAd,EAAT,CAD2B,IAE7B,KAAO,KAAK,QAAL,CAAc,MAAd,CAAP,CAF6B,GAG7B,CAAC,IAAD,CACH,KAAO,KAAK,QAAL,CAAc,MAAd,EAAwB,EAAxB,CADR,IAEA,CAAK,GAAL,CAAW,GAAX,CALiC,IAMjC,CAAK,IAAL,CAAY,EAAE,KAAK,QAAL,CAAc,UAAd,CAAF,CAAZ,CANiC,IAOjC,CAAK,MAAL,CAAc,IAAd,CAPiC,IAQjC,CAAK,QAAL,CAAc,KAAK,IAAL,CAAY,OAAO,aAAP,CAAqB,GAArB,CAA0B,KAAK,IAAL,CAAtC,CAAmD,GAAnD,CAAd,CARiC,IASjC,CAAK,MAAL,CAAc,KAAd,CATiC,IAUjC,CAAK,QAAL,CAAc,WAAd,EAViC,CAAf,CADsB,MAazC,CAAO,QAAP,CAAkB,CAAC,KAAM,CAAN,CAAS,KAAM,CAAN,CAA5B,CAbyC,CAAlB,CAAxB,CAiBA,SAAS,IAAT,CAAc,eAAd,CAA+B,QAAY,KAAV,eAAU,IACtC,SAAW,KAAK,OAAL,CAAa,UAAb,CAAX,CADsC,GAEtC,CAAC,QAAD,EAAa,CAAC,SAAS,MAAT,EAAmB,CAAC,IAAD,CACpC,OADD,IAEI,MAAQ,SAAS,MAAT,CAAgB,QAAhB,CAJ8B,IAKrC,IAAI,EAAI,CAAJ,CAAO,IAAM,KAAK,MAAL,CAAa,EAAI,GAAJ,CAAS,GAA5C,CAAiD,CAChD,MAAM,EAAI,MAAM,IAAN,EAAJ,CAD0C,IAE5C,KAAO,MAAM,CAAN,CAAP,CAF4C,GAG5C,CAAC,IAAD,CACH,KAAO,MAAM,CAAN,EAAW,EAAX,CADR,IAEA,CAAK,IAAL,CAAY,KAAK,CAAL,CAAZ,CALgD,GAM5C,KAAK,IAAL,CAAW,CACd,MAAM,EAAI,OAAO,aAAP,CAAqB,KAAK,GAAL,CAAU,KAAK,IAAL,CAAnC,CADQ,IAEd,CAAK,IAAL,CAAU,IAAV,CAAe,CAAf,EAFc,CAAf,CAND,CAL8B,CAA/B,CAmBA,KAAK,UAAL,CAAgB,OAAO,UAAP,CAAhB,CAAqC,SAAU,uCAAR,YAAQ,GAC1C,CACH,KAAK,EAAL,EADG,CAAJ,MAGO,CAAP,CAAU,CACT,QAAQ,KAAR,CAAc,CAAd,EADS,CAAV,CAJoC","file":"client/amusement.js","sourcesContent":["/*\n * Dice rolls and fun JS injections\n */\n\nconst main = require('./main'),\n\t{$, common, state, oneeSama} = main;\n\n// Render dice rolls and other hash commands\noneeSama.hook('imouto', function (imouto) {\n\timouto.queueRoll = function (bit) {\n\t\tconst number = this.allRolls.sent++;\n\t\tlet info = this.allRolls[number];\n\t\tif (!info)\n\t\t\tinfo = this.allRolls[number] = {};\n\t\tinfo.bit = bit;\n\t\tinfo.$tag = $(this.callback('<strong>'));\n\t\tthis.strong = true;\n\t\tthis.callback(info.dice ? common.readable_dice(bit, info.dice) : bit);\n\t\tthis.strong = false;\n\t\tthis.callback('</strong>');\n\t};\n\timouto.allRolls = {sent: 0, seen: 0};\n});\n\n// Handle dice in the postForm\noneeSama.hook('insertOwnPost', ({dice}) => {\n\tlet postForm = main.request('postForm');\n\tif (!postForm || !postForm.imouto || !dice)\n\t\treturn;\n\tlet rolls = postForm.imouto.allRolls;\n\tfor (let i = 0, lim = dice.length; i < lim; i++) {\n\t\tconst n = rolls.seen++;\n\t\tlet info = rolls[n];\n\t\tif (!info)\n\t\t\tinfo = rolls[n] = {};\n\t\tinfo.dice = dice[i];\n\t\tif (info.$tag) {\n\t\t\tconst r = common.readable_dice(info.bit, info.dice);\n\t\t\tinfo.$tag.html(r);\n\t\t}\n\t}\n});\n\n// Execute server-sent JS in fun threads\nmain.dispatcher[common.EXECUTE_JS] = ([js]) => {\n\ttry {\n\t\teval(js);\n\t}\n\tcatch (e) {\n\t\tconsole.error(e);\n\t}\n};\n"],"sourceRoot":"/source/"}