{"version":3,"sources":["collection.js"],"names":[],"mappings":"kdAmDoB","file":"collection.js","sourcesContent":["\n/**\n * Holds a collection of models\n */\nexport default class Collection {\n\t/**\n\t * Creates a new Collection instance\n\t * @param {Model[]=} models - Suplied array of models\n\t */\n\tconstructor(models) {\n\t\tthis.models = {}\n\t\tif (models) {\n\t\t\tfor (let model of models) {\n\t\t\t\tthis.add(model)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add model to collection\n\t * @param {Model} model\n\t */\n\tadd(model) {\n\t\tthis.models[model.id] = model\n\t\tmodel.collection = this\n\t}\n\n\t/**\n\t * Remove model from the collection\n\t * @param {Model} model\n\t */\n\tremove(model) {\n\t\tdelete this.models[model.id]\n\t\tdelete model.collection\n\t}\n\n\t/**\n\t * Remove all models from collection\n\t */\n\tclear() {\n\t\tfor (let id of this.models) {\n\t\t\tdelete this.models[id].collection\n\t\t}\n\t\tthis.models = {}\n\t}\n\n\t/**\n\t * Runs the suplied model method for each model in the collection\n\t * @param {string} method - Method to be called\n\t * @param {...*=} args - Arguments to pass\n\t */\n\tforEach(method, ...args) {\n\t\tfor (let id in this.models) {\n\t\t\tthis.models[id][method](...args)\n\t\t}\n\t}\n}\n"],"sourceRoot":"/source/"}