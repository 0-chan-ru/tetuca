{"version":3,"sources":["collection.js"],"names":[],"mappings":"kdAmDuB,IAAI,iDAAJ,IAAI","file":"collection.js","sourcesContent":["\n/**\n * Holds a collection of models\n */\nexport default class Collection {\n    /**\n     * Creates a new Collection instance\n     * @param {Model[]=} models - Suplied array of models\n     */\n    constructor(models) {\n        this.models = {}\n        if (models) {\n            for (let model of models) {\n                this.add(model)\n            }\n        }\n    }\n\n    /**\n     * Add model to collection\n     * @param {Model} model\n     */\n    add(model) {\n        this.models[model.id] = model\n        model.collection = this\n    }\n\n    /**\n     * Remove model from the collection\n     * @param {Model} model\n     */\n    remove(model) {\n        delete this.models[model.id]\n        delete model.collection\n    }\n\n    /**\n     * Remove all models from collection\n     */\n    clear() {\n        for (let id of this.models) {\n            delete this.models[id].collection\n        }\n        this.models = {}\n    }\n\n    /**\n     * Runs the suplied model method for each model in the collection\n     * @param {string} method - Method to be called\n     * @param {...*=} args - Arguments to pass\n     */\n    forEach(method, ...args) {\n        for (let id in this.models) {\n            this.models[id][method](...args)\n        }\n    }\n}\n"],"sourceRoot":"/source/"}