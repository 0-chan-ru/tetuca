{"version":3,"sources":["notify.js"],"names":[],"mappings":"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","file":"notify.js","sourcesContent":["/*\n Unread post etc. notifications\n */\n\nconst main = require('./main'),\n\t{$, _, Backbone, config, connSM, etc, state, options} = main;\n\n// Needs to be available with no connectivity, so we download and cache it\nlet discoFavicon = '',\n\txhr = new XMLHttpRequest();\nxhr.open('GET', '/ass/css/ui/disconnected.ico');\nxhr.responseType = 'blob';\nxhr.onload = function() {\n\tif (this.status === 200)\n\t\tdiscoFavicon = window.URL.createObjectURL(this.response);\n};\nxhr.send();\n\nlet NotifyModel = Backbone.Model.extend({\n\tinitialize() {\n\t\tthis.$favicon = $('#favicon');\n\t\tthis.check(this);\n\n\t\tthis.listenTo(this, 'change', this.check);\n\t\tmain.reply('post:inserted', model => {\n\t\t\t// It's ours, don't notify unread\n\t\t\tif (model.get('mine'))\n\t\t\t\treturn;\n\t\t\tif (document.hidden)\n\t\t\t\tthis.set('unreadCount', this.get('unreadCount') + 1);\n\t\t});\n\t\tmain.reply('notify:title', title => this.set('title', title));\n\n\t\t// Pass visibility changes to notify model\n\t\tdocument.addEventListener('visibilitychange', e => {\n\t\t\tconst hidden = e.target.hidden;\n\t\t\t// Unread post count will reset\n\t\t\tthis.set({\n\t\t\t\thidden: hidden,\n\t\t\t\tunreadCount: 0,\n\t\t\t\treply: !hidden\n\t\t\t});\n\t\t}, false);\n\n\t\tlet dropped = () => this.set('alert', true);\n\t\tconnSM.on('dropped', dropped);\n\t\tconnSM.on('desynced', dropped);\n\t\tconnSM.on('synced', () => notify.set('alert', false));\n\t},\n\tcheck(model) {\n\t\tconst {hidden, unreadCount, reply, alert} = model.attributes;\n\t\tlet icon = '/ass/favicon.ico';\n\t\tif (alert)\n\t\t\treturn this.render(discoFavicon, '--- ');\n\t\telse if (!hidden)\n\t\t\treturn this.render(icon, '');\n\t\tlet prefix = '';\n\t\tif (unreadCount) {\n\t\t\tprefix += `(${unreadCount}) `;\n\t\t\ticon = '/ass/css/ui/unreadFavicon.ico';\n\t\t}\n\t\tif (reply){\n\t\t\tprefix = '>> ' + prefix;\n\t\t\ticon = '/ass/css/ui/replyFavicon.ico';\n\t\t}\n\t\tthis.render(icon, prefix);\n\t},\n\trender(icon, prefix) {\n\t\tdocument.title = prefix + this.get('title');\n\t\tthis.$favicon.attr('href', icon);\n\t}\n});\n\nlet notify = new NotifyModel({\n\tunreadCount: 0,\n\ttitle: document.title\n});\n\n// Remember replies that don't need a new desktop notification for 3 days\n// Own post are remember for 2 days, so lets keep 1 day as a buffer\nlet replies = new main.Memory('replies', 3);\n\nmain.reply('repliedToMe', function (num) {\n\tlet post = state.posts.get(num);\n\tif (!post)\n\t\treturn;\n\tpost = post.attributes;\n\n\t// Already displayed a notification for the reply. Needs to be read\n\t// freshly from local storage each time, not to trigger multiple times,\n\t// if the same post is displayed in multiple tabs.\n\tif (num in replies.readAll())\n\t\treturn;\n\tif (options.get('notification') && document.hidden && !main.isMobile) {\n\t\tlet n = new Notification(main.lang.quoted, {\n\t\t\t// if the post doesn't have a image we use a bigger favicon\n\t\t\ticon: (post.image && options.get('thumbs')!=='hide' && !main.oneeSama.workMode) ? main.oneeSama.thumbPath(post.image)\n\t\t\t\t: '/ass/css/ui/favbig.png',\n\t\t\tbody: post.body\n\t\t});\n\t\tn.onclick = function() {\n\t\t\twindow.focus();\n\t\t\tlocation.hash = '#p' + num;\n\t\t};\n\t}\n\n\tnotify.set({reply: true});\n\t// Record as already notified/read to local storage\n\treplies.write(num);\n});\n\nmain.reply('time:syncwatch', function () {\n\tif (!options.get('notification') || !document.hidden)\n\t\treturn;\n\tnew Notification(main.lang.syncwatchStarting)\n\t\t.onclick = () => window.focus();\n});\n"],"sourceRoot":"/source/"}