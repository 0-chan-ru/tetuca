{"version":3,"sources":["mod/input.js"],"names":[],"mappings":"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","file":"mod/input.js","sourcesContent":["/*\nVarious input boxes\n */\n\nconst main = require('main'),\n\tutil = require('./util'),\n\t{$, Backbone, common, lang, modals} = main,\n\t{parseHTML} = common;\n\nconst InputBoxView = Backbone.View.extend({\n\tclassName: 'mod inputBox',\n\tevents: {\n\t\tsubmit: 'submit'\n\t},\n\tinitialize() {\n\t\tmodals[this.type] = this;\n\t\tthis.render();\n\t},\n\trender() {\n\t\tconst html = parseHTML\n\t\t\t`<form>\n\t\t\t\t${this.renderInput()}\n\t\t\t\t<input type=\"submit\" value=\"${lang.send}\">\n\t\t\t</form>`;\n\t\tthis.$el\n\t\t\t.html(html)\n\t\t\t.prependTo(main.$toolbox.$el)\n\t\t\t.find('input').first().focus();\n\t},\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tconst values = [];\n\t\t$(event.target).find('input[type!=submit]').each(function () {\n\t\t\tvalues.push(this.type === 'checkbox' ? this.checked : this.value);\n\t\t});\n\t\tthis.handler(values);\n\t},\n\tkill() {\n\t\tdelete modals[this.type];\n\t\tthis.remove();\n\t}\n});\n\nconst NotificationInputView = InputBoxView.extend({\n\ttype: 'notification',\n\trenderInput() {\n\t\treturn parseHTML `<input ${{\n\t\t\ttype: 'text',\n\t\t\tsize: 25,\n\t\t\tplaceholder: lang.mod.placeholders.msg\n\t\t}}>`;\n\t},\n\thandler(msg) {\n\t\tmain.send([common.NOTIFICATION, msg[0]]);\n\t\tthis.kill();\n\t}\n});\nexports.notification = NotificationInputView;\n\nconst BanInputView = InputBoxView.extend({\n\ttype: 'ban',\n\trenderInput() {\n\t\tlet html = '';\n\t\tfor (let field of ['days', 'hours', 'minutes']) {\n\t\t\thtml += parseHTML `<input ${{\n\t\t\t\ttype: 'number',\n\t\t\t\tplaceholder: lang.mod.placeholders[field]\n\t\t\t}}>`\n\t\t}\n\t\thtml += parseHTML `<input ${{\n\t\t\ttype: 'text',\n\t\t\tsize: 25,\n\t\t\tplaceholder: lang.mod.placeholders.reason\n\t\t}}>`;\n\t\tconst [label, title] = lang.mod.displayBan;\n\t\thtml += parseHTML\n\t\t\t`<label ${{title}}>\n\t\t\t\t<input type=\"checkbox\">\n\t\t\t\t${label}\n\t\t\t</label>`;\n\t\treturn html;\n\t},\n\thandler(info) {\n\t\t// Ensure reason field is filled\n\t\tif (!info[3])\n\t\t\treturn this.renderReasonPrompt();\n\t\t\n\t\t// Coerce time units and checkbox value to integers\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tinfo[i] = +info[i];\n\t\t}\n\t\tinfo[4] = +info[4];\n\t\tfor (let num of util.getSelected()) {\n\t\t\tmain.send([common.BAN, num, ...info]);\n\t\t}\n\t\tthis.kill();\n\t},\n\trenderReasonPrompt() {\n\t\tthis.$el.find('.reasonPrompt').remove();\n\t\tthis.$el\n\t\t\t.append(parseHTML\n\t\t\t\t`<b class=\"reasonPrompt admin\">\n\t\t\t\t\t${lang.mod.needReason}\n\t\t\t\t</b>`)\n\t\t\t.find('input[type=text]').focus();\n\t}\n});\nexports.ban = BanInputView;\n"],"sourceRoot":"/source/"}