{"version":3,"sources":["mod/panels.js"],"names":[],"mappings":"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","file":"mod/panels.js","sourcesContent":["/*\nModeration log modal view\n */\n\nconst main = require('main'),\n\t{_, Backbone, common, dispatcher, etc, oneeSama, lang, modals, Memory,\n\t\tstate} = main\n\nconst PanelView = Backbone.View.extend({\n\tclassName: 'modal mod panel glass',\n\tinitialize() {\n\t\tthis.$el.appendTo(main.$overlay);\n\t\tmodals[this.type] = this;\n\n\t\t// Register websocket handler\n\t\tdispatcher[this.kind] = msg => this.render(msg[0]);\n\t\t// Send request\n\t\tmain.send([this.kind]);\n\t},\n\trender(info) {\n\t\tif (!info.length) {\n\t\t\treturn this.el.innerHTML = \"God's in his Heaven. All's right\"\n\t\t\t\t+ \" with the world.\";\n\t\t}\n\t\tthis.el.innerHTML = this.renderContents(info);\n\t\tthis.postRender && this.postRender()\n\n\t\t// Scroll to the end of the log\n\t\tthis.el.scrollTop = this.el.scrollHeight;\n\t\treturn this;\n\t},\n\tkill() {\n\t\tdelete dispatcher[this.kind];\n\t\tdelete modals[this.type];\n\t\tthis.remove();\n\t}\n});\n\nconst ModLogView = PanelView.extend({\n\ttype: 'log',\n\tkind: common.MOD_LOG,\n\trenderContents(info) {\n\t\treturn table(info, act => [\n\t\t\t// Unbans do not have a target post\n\t\t\tact.num ? oneeSama.postRef(act.num, act.op) : '',\n\t\t\tlang.mod.formatLog(act),\n\t\t\toneeSama.time(act.time)\n\t\t]);\n\t}\n});\nexports.log = ModLogView;\n\nconst AdminPanelView = PanelView.extend({\n\ttype: 'adminPanel',\n\tid: 'adminPanel',\n\tkind: common.ADMIN_PANEL,\n\tevents: {\n\t\t'click .unban': 'unban'\n\t},\n\trenderContents(info) {\n\t\tthis.banCount = 0;\n\t\treturn table(info, ban => {\n\t\t\tthis.banCount++;\n\t\t\treturn [\n\t\t\t\toneeSama.mnemonic(ban[0]),\n\t\t\t\toneeSama.time(ban[1]),\n\t\t\t\t`<a class=\"unban\" data-id=\"${ban[0]}\">${lang.mod.unban}</a>`\n\t\t\t];\n\t\t});\n\t},\n\tunban(event) {\n\t\tconst el = event.target;\n\t\tmain.send([common.UNBAN, el.getAttribute('data-id')]);\n\t\tel.parentElement.parentElement.remove();\n\n\t\t// Check if any bans left\n\t\tif (!--this.banCount)\n\t\t\tthis.kill();\n\t}\n});\nexports.adminPanel = AdminPanelView;\n\n/**\n * Construct a table from an array of items and a consumer funtion that returns\n * an array of column contents.\n */\nfunction table(rows, func) {\n\tlet html = '<table>';\n\tfor (let row of rows) {\n\t\thtml += '<tr>';\n\t\tfor (let cell of func(row)) {\n\t\t\thtml += `<td>${cell}</td>`;\n\t\t}\n\t\thtml += '</tr>';\n\t}\n\thtml += '</table>';\n\treturn html;\n}\n\nconst RequestPanelView = PanelView.extend({\n\ttype: 'djPanel',\n\tevents: {\n\t\t'click .close': 'removeRequest',\n\t\t'click #rescan': 'scan'\n\t},\n\n\t/**\n\t * Override parent method, because we don't query the server\n\t */\n\tinitialize() {\n\t\tmain.$overlay[0].append(this.el)\n\t\tmodals[this.type] = this;\n\t\tthis.removed = new Memory('request', 2)\n\t    this.scan()\n\t},\n\n\t/**\n\t * Scan thread for `/r/ song` strings, we have not removed yet\n\t */\n\tscan() {\n\t    const removed = this.removed.readAll(),\n\t\t\trequests = []\n\t\tfor (let {attributes} of state.posts.models) {\n\t\t\t// Post's request(s) already processed\n\t\t\tif (attributes.num in removed)\n\t\t\t\tcontinue\n\t\t    const m = attributes.body.match(/\\/r\\/[^\\n]+$/gm)\n\t\t\tif (!m)\n\t\t\t    continue\n\t\t\tfor (let request of m) {\n\t\t\t    request = request.replace('/r/', '').trim()\n\t\t\t\trequests.push([attributes.num, attributes.mnemonic, request])\n\t\t\t}\n\t\t}\n\t\treturn this.render(_.sortBy(requests, 1))\n\t},\n\n\t/**\n\t * Render the inner table\n\t */\n\trenderContents(requests) {\n\t\treturn table(requests, request => [\n\t\t\toneeSama.postRef(request[0], oneeSama.op).safe,\n\t\t\toneeSama.mnemonic(request[1]),\n\t\t\trequest[2],\n\t\t\t`<a class=\"close\" data-id=\"${request[0]}\">X</a>`\n\t\t])\n\t},\n\n\t/**\n\t * Extra rendering operations to perform that deviate from parent class\n\t */\n\tpostRender() {\n\t    this.el.append(etc.parseDOM(`<a id=\"rescan\">${lang.rescan}</a>`)[0])\n\t},\n\n\t/**\n\t * Remove a request from the list and persist removal to localStorage\n\t */\n\tremoveRequest(event) {\n\t\tevent.preventDefault()\n\t\tconst el = event.target\n\t\tthis.removed.write(el.getAttribute('data-id'))\n\t\tel.closest('tr').remove()\n\t}\n})\nexports.djPanel = RequestPanelView\n"],"sourceRoot":"/source/"}