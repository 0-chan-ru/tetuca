{"version":3,"sources":["posts/imager.js"],"names":[],"mappings":"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","file":"posts/imager.js","sourcesContent":["/*\n * Thumbnail and image renderring\n */\n\nimport View from '../view'\nimport {$threads} from '../state'\n\n/**\n * Thumbnail and image renderring logic\n */\nclass Imager extends View {\n    /**\n     * Construct a new post image handler\n     * @param {Object} args\n     */\n    constructor(args) {\n        super(args)\n    }\n}\n\nexports.Hidamari = Backbone.View.extend({\n\t/*\n\t Render entire <figure>. Rerenderring completely each time is considerable\n\t overhed, but the alternative is very convoluted logic. I don't really want\n\t to attach a FSM to each view, just for image renderring.\n\t */\n\trenderImage(arg, image, manual) {\n\t\t/*\n\t\t All kinds of listeners call this method, so we need to ensure we\n\t\t always get the appropriate image object.\n\t\t */\n\t\tconst reveal = arg === true,\n\t\t\t{model, el} = this;\n\t\tif (!image || !image.src)\n\t\t\timage = model.get('image');\n\t\tconst figure = el.query('figure');\n\t\tif (figure)\n\t\t\tfigure.remove();\n\n\t\t// Remove image on mod deletion\n\t\tif (!image)\n\t\t\treturn;\n\t\tel.query('blockquote')\n\t\t\t.before(util.parseDOM(oneeSama.image(image, reveal)));\n\n\t\t// Scroll the post back into view, if contracting images taller than\n\t\t// the viewport\n\t\tif (manual && model.get('tallImage')) {\n\t\t\twindow.scrollTop = el.getBoundingClientRect().top\n\t\t\t\t+ document.body.scrollTop\n\t\t\t\t- document.query('#banner').height;\n\t\t}\n\n\t\tmodel.set({\n\t\t\t// Only used in hidden thumbnail mode\n\t\t\tthumbnailRevealed: reveal,\n\t\t\timageExpanded: false,\n\t\t\ttallImage: false\n\t\t});\n\t},\n\tautoExpandImage() {\n\t\tconst img = this.model.get('image');\n\t\tif (!img\n\t\t\t|| !massExpander.get('expand')\n\t\t\t// Don't auto expand webm/PDF/MP3\n\t\t\t|| ['.webm', '.pdf', '.mp3'].indexOf(img.ext) > -1\n\t\t)\n\t\t\treturn this;\n\t\tthis.toggleImageExpansion(true, img);\n\t\treturn this;\n\t},\n\ttoggleImageExpansion(expand, img, manual) {\n\t\tconst fit = options.get('inlinefit');\n\t\tif (!img || fit === 'none')\n\t\t\treturn;\n\t\tif (expand)\n\t\t\tthis.fitImage(img, fit);\n\t\telse\n\t\t\tthis.renderImage(null, img, manual);\n\t},\n\tfitImage(img, fit){\n\t\t// Open PDF in a new tab on click\n\t\tif (img.ext === '.pdf')\n\t\t\treturn window.open(oneeSama.imagePaths().src + img.src, '_blank');\n\n\t\t// Audio controls are always the same height and do not need to be\n\t\t// fitted\n\t\tif (img.ext === '.mp3')\n\t\t\treturn this.renderAudio(img);\n\n\t\tlet newWidth, newHeight,\n\t\t\twidth = newWidth = img.dims[0],\n\t\t\theight = newHeight = img.dims[1];\n\t\tif (fit === 'full')\n\t\t\treturn this.expandImage(img, {width, height});\n\n\t\tconst both = fit === 'both',\n\t\t\twidthFlag = both || fit === 'width',\n\t\t\theightFlag = both || fit === 'height',\n\t\t\taspect = width / height;\n\t\tlet fullWidth, fullHeight;\n\t\tif (widthFlag) {\n\t\t\tconst maxWidth = this.imageMaxWidth();\n\t\t\tif (newWidth > maxWidth) {\n\t\t\t\tnewWidth = maxWidth;\n\t\t\t\tnewHeight = newWidth / aspect;\n\t\t\t\tfullWidth = true;\n\t\t\t}\n\t\t}\n\t\tif (heightFlag) {\n\t\t\tlet maxHeight = window.innerHeight\n\t\t\t\t- document.query('#banner').offsetHeight;\n\t\t\tif (newHeight > maxHeight) {\n\t\t\t\tnewHeight = maxHeight;\n\t\t\t\tnewWidth = newHeight * aspect;\n\t\t\t\tfullHeight = true;\n\t\t\t}\n\t\t}\n\t\tif (newWidth > 50 && newHeight > 50) {\n\t\t\twidth = newWidth;\n\t\t\theight = newHeight;\n\t\t}\n\t\tthis.expandImage(img, width, height, fullHeight && !fullWidth);\n\t},\n\t// Calculate maximum horizontal dimension an image can be expanded to\n\timageMaxWidth() {\n\t\tconst {el, model} = this;\n\t\treturn window.innerWidth\n\t\t\t- parseInt(el.closest('section').getBoundingClientRect().left) * 2\n\t\t\t- util.outerWidth(model.get('op') ? el : el.query('.background'));\n\t},\n\texpandImage(img, width, height, noMargin) {\n\t\tconst isVideo = img.ext === '.webm';\n\t\tconst attrs = {\n\t\t\tsrc: oneeSama.imagePaths().src + img.src,\n\t\t\twidth,\n\t\t\theight\n\t\t};\n\t\tlet cls = 'expanded';\n\t\tif (noMargin)\n\t\t\tcls += ' noMargin';\n\t\tattrs.class = cls;\n\n\t\tif (isVideo)\n\t\t\tattrs.autoplay = attrs.loop = attrs.controls = true\n\n\t\tthis.el.query('figure').lastChild.innerHTML = common.parseHTML\n\t\t\t`<${isVideo ? 'video' : 'img'} ${attrs}>`;\n\t\tthis.model.set({\n\t\t\timageExpanded: true,\n\t\t\ttallImage: height > window.innerHeight\n\t\t});\n\t},\n\trenderAudio(img) {\n\t\tthis.el.query('figure').append(util.parseDOM(common.parseHTML\n\t\t\t`<audio src=\"${oneeSama.imagePaths().src + img.src}\"\n\t\t\t\twidth=\"300\"\n\t\t\t\theight=\"3em\"\n\t\t\t\tautoplay loop controls\n\t\t\t>\n\t\t\t</audio>`));\n\t\tthis.model.set('imageExpanded', true);\n\t}\n});\n\n// Expand all images\nconst ExpanderModel = Backbone.Model.extend({\n\tinitialize() {\n\t\t$threads.on('click', '#expandImages', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.toggle();\n\t\t});\n\t},\n\ttoggle() {\n\t\tconst expand = !this.get('expand');\n\t\tthis.set('expand', expand).massToggle(expand);\n\t\t$threads\n\t\t\t.find('#expandImages')\n\t\t\t.text(main.lang.expander[+expand]);\n\t},\n\t// More efficent than individual listeners\n\tmassToggle(expand) {\n\t\tconst fit = options.get('inlinefit');\n\t\tif (fit === 'none')\n\t\t\treturn;\n\t\tlet models = state.posts.models;\n\t\tfor (let i = 0, l = models.length; i < l; i++) {\n\t\t\tlet model = models[i],\n\t\t\t\timg = model.get('image');\n\t\t\tif (!img)\n\t\t\t\tcontinue;\n\t\t\tif (expand)\n\t\t\t\tmodel.dispatch('fitImage', img, fit);\n\t\t\telse\n\t\t\t\tmodel.dispatch('renderImage', null, img);\n\t\t}\n\t}\n});\n\nconst massExpander = exports.massExpander = new ExpanderModel();\nmain.reply('massExpander:unset', () => massExpander.unset());\n\n// Proxy image clicks to views. More performant than dedicated listeners for\n// each view.\n$threads.on('click', 'img, video', function(e) {\n\tif (options.get('inlinefit') == 'none' || e.which !== 1)\n\t\treturn;\n\tlet model = util.getModel(e.target);\n\tif (!model)\n\t\treturn;\n\te.preventDefault();\n\n\t// Remove image hover preview, if any\n\tmain.request('imager:clicked');\n\tmodel.dispatch('toggleImageExpansion', !model.get('imageExpanded'),\n\t\tmodel.get('image'), true);\n});\n\n// Reveal/hide thumbnail by clicking [Show]/[Hide] in hidden thumbnail mode\n$threads.on('click', '.imageToggle', function(e) {\n\te.preventDefault();\n\tlet model = util.getModel(e.target);\n\tif (!model)\n\t\treturn;\n\tmain.follow(() =>\n\t\tmodel.dispatch('renderImage', !model.get('thumbnailRevealed')));\n});\n"],"sourceRoot":"/source/"}