{"version":3,"sources":["posts/render/posts.js"],"names":[],"mappings":";;;;;;;;;;;8WAgBoC,GAAG,+CAAG,EAAE","file":"posts/render/posts.js","sourcesContent":["/**\n * Posts rendering module\n */\n\nimport {parseHTML} from '../../util'\nimport {renderHeader} from './header'\nimport {renderImage} from './image'\nimport {renderBanned, renderBacklinks} from './etc'\nimport {renderBody} from './body'\n\n/**\n * Render the OP\n * @param {Post} data - Post model\n * @param {string=} cls - Class to assign to post\n * @returns {string}\n */\nexport function renderSection(data, cls = '') {\n    if (data.locked) {\n        cls += ' locked'\n    }\n    if (data.editing) {\n        cls += ' editing'\n    }\n    data.image.large = true // Larger thumbnails\n\n    return parseHTML\n        `<section id=\"p${data.num}\" class=\"${cls}\">\n            <div class=\"background glass\">\n                ${renderPost(data)}\n                <span class=\"omit\"></span>\n            </div>\n        </section>`\n}\n\n/**\n * Render a reply post\n * @param {Post} data\n * @returns {string}\n */\nexport function renderArticle(data) {\n    let cls = 'glass'\n    if (data.editing) {\n        cls += ' editing'\n    }\n    return parseHTML\n        `<article id=\"p${data.num}\" class=\"${cls}\">\n            ${renderPost(data)}\n        </article>`\n}\n\nfunction renderPost(data) {\n    const {image, mod, body, backlinks, banned} = data\n\n    return parseHTML\n        `${renderHeader(data)}\n        ${renderImage(image)}\n        <div class=\"container\">\n            ${mod ? renderModInfo(mod) : ''}\n            <blockquote>\n                ${renderBody(body)}\n            </blockquote>\n            <small>\n                ${renderBacklinks(backlinks)}\n            </small>\n            ${banned ? renderBanned(): ''}\n        </div>`\n}\n"],"sourceRoot":"/source/"}