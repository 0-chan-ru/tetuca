'use strict';System.register(['../common','underscore'],function(_export,_context){var randomID,WeakSetMap,message,extend;return {setters:[function(_common){randomID=_common.randomID;WeakSetMap=_common.WeakSetMap;message=_common.message;},function(_underscore){extend=_underscore.extend;}],execute:function(){const byID={};_export('byID',byID);const byPage=new WeakSetMap();_export('byPage',byPage);self.onmessage=msg => new Client(msg);class Client{constructor(msg){this.port=msg.ports[0];this.port.onmessage=this.receive.bind(this);this.setState(msg.data);let id;do {id=randomID(8);}while(id in byID);this.id=id;byID[id]=this;}setState(url){this.unsetState();const state=this.parseURL(url);extend(this,state);const board=state.board;const thread=state.thread;byPage.add(thread?thread:board,this);}unsetState(){byPage.remove(this.board,this);byPage.remove(this.thread,this);}parseURL(href){const state={board:href.match(/\/([a-zA-Z0-9]+?)\//)[1],thread:href.match(/\/(\d+)(:?#\d+)?(?:[\?&]\w+=\w+)*$/),lastN:href.match(/[\?&]last=(\d+)/)};for(let key of ['thread','lastN']){const val=state[key];state[key]=val?parseInt(val[1]):0;}return state;}remove(){this.unsetState();this.port.close();delete byID[this.id];}receive(msg){switch(msg.data){case message.disconnect:this.remove();break;default:throw new Error('Unknown client message type: '+msg.data);}}}}};});
//# sourceMappingURL=../maps/worker/clients.js.map
