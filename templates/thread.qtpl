{% import "github.com/bakape/meguca/lang" %}
{% import "github.com/bakape/meguca/common" %}
{% import "github.com/bakape/meguca/config" %}

{% func renderThread(postHTML []byte, ln lang.Pack) %}{% stripspace %}
	<span class="aside-container top-margin">
		<span class="act" id="top">
			<a href="#bottom">
				{%s= ln.UI["bottom"] %}
			</a>
		</span>
		<span id="expand-images" class="act">
			<a>
				{%s= ln.Common.Posts["expandImages"] %}
			</a>
		</span>
	</span>
	<noscript>
		TODO: Noscript post creation
	</noscript>
	<hr>
	{%z= postHTML %}
	<div id="bottom-spacer"></div>
	<aside class="act posting glass">
		<a>
			{%s= ln.UI["reply"] %}
		</a>
	</aside>
	<hr>
	<span class="aside-container">
		<span class="act" id="bottom">
			<a href="." class="history">
				{%s= ln.UI["return"] %}
			</a>
		</span>
		<span class="act">
			<a href="#top">
				{%s= ln.UI["top"] %}
			</a>
		</span>
		<span class="act">
			<a href="?last=100" class="history reload">
				{%s= ln.Common.UI["last"] %}{% space %}100
			</a>
		</span>
		<span id="lock" style="visibility: hidden;">
			{%s= ln.UI["lockedToBottom"] %}
		</span>
	</span>
{% endstripspace %}{% endfunc %}

ThreadPosts renders the post content of a thread. Separate function to allow
caching of generated posts.
{% func ThreadPosts(t common.Thread, json []byte, omit, imageOmit int) %}{% stripspace %}
	<div id="thread-container">
		{% code root := config.Get().RootURL %}
		{%= renderArticle(t.Post, t.ID, omit, imageOmit, t.Subject, root) %}
		{% for _, p := range t.Posts %}
			{%= renderArticle(p, t.ID, 0, 0, "", root) %}
		{% endfor %}
	</div>
	<script id="post-data" type="application/json">
		{%z= json %}
	</script>
	<script id="board-configs" type="application/json">
		{%z= config.GetBoardConfigs(t.Board).JSON %}
	</script>
{% endstripspace %}{% endfunc %}
