// This file is automatically generated by qtc from "forms.html".
// See https://github.com/valyala/quicktemplate for details.

//line templates/forms.html:1
package templates

//line templates/forms.html:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/forms.html:1
import "github.com/bakape/meguca/config"

//line templates/forms.html:2
import "github.com/bakape/meguca/lang"

// OwnedBoard renders a form for selecting one of several boards owned by the
// user

//line templates/forms.html:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/forms.html:6
func StreamOwnedBoard(qw422016 *qt422016.Writer, boards config.BoardTitles, lang map[string]string) {
	//line templates/forms.html:7
	if len(boards) != 0 {
		//line templates/forms.html:7
		qw422016.N().S(`<select name="boards" required>`)
		//line templates/forms.html:9
		for _, b := range boards {
			//line templates/forms.html:9
			qw422016.N().S(`<option value="`)
			//line templates/forms.html:10
			qw422016.N().S(b.ID)
			//line templates/forms.html:10
			qw422016.N().S(`">`)
			//line templates/forms.html:10
			streamformatTitle(qw422016, b.ID, b.Title)
			//line templates/forms.html:10
			qw422016.N().S(`</option>`)
			//line templates/forms.html:11
		}
		//line templates/forms.html:11
		qw422016.N().S(`</select><br><input type="submit" value="`)
		//line templates/forms.html:14
		qw422016.N().S(lang["submit"])
		//line templates/forms.html:14
		qw422016.N().S(`">`)
		//line templates/forms.html:15
	} else {
		//line templates/forms.html:16
		qw422016.N().S(lang["ownNoBoards"])
		//line templates/forms.html:16
		qw422016.N().S(`<br><br>`)
		//line templates/forms.html:19
	}
	//line templates/forms.html:19
	qw422016.N().S(`<input type="button" name="cancel" value="`)
	//line templates/forms.html:20
	qw422016.N().S(lang["cancel"])
	//line templates/forms.html:20
	qw422016.N().S(`"><div class="form-response admin"></div>`)
//line templates/forms.html:22
}

//line templates/forms.html:22
func WriteOwnedBoard(qq422016 qtio422016.Writer, boards config.BoardTitles, lang map[string]string) {
	//line templates/forms.html:22
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/forms.html:22
	StreamOwnedBoard(qw422016, boards, lang)
	//line templates/forms.html:22
	qt422016.ReleaseWriter(qw422016)
//line templates/forms.html:22
}

//line templates/forms.html:22
func OwnedBoard(boards config.BoardTitles, lang map[string]string) string {
	//line templates/forms.html:22
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/forms.html:22
	WriteOwnedBoard(qb422016, boards, lang)
	//line templates/forms.html:22
	qs422016 := string(qb422016.B)
	//line templates/forms.html:22
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/forms.html:22
	return qs422016
//line templates/forms.html:22
}

//line templates/forms.html:24
func streamformatTitle(qw422016 *qt422016.Writer, id, title string) {
	//line templates/forms.html:24
	qw422016.N().S(`
	/`)
	//line templates/forms.html:25
	qw422016.N().S(id)
	//line templates/forms.html:25
	qw422016.N().S(`/ - `)
	//line templates/forms.html:25
	qw422016.E().S(title)
	//line templates/forms.html:25
	qw422016.N().S(`
`)
//line templates/forms.html:26
}

//line templates/forms.html:26
func writeformatTitle(qq422016 qtio422016.Writer, id, title string) {
	//line templates/forms.html:26
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/forms.html:26
	streamformatTitle(qw422016, id, title)
	//line templates/forms.html:26
	qt422016.ReleaseWriter(qw422016)
//line templates/forms.html:26
}

//line templates/forms.html:26
func formatTitle(id, title string) string {
	//line templates/forms.html:26
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/forms.html:26
	writeformatTitle(qb422016, id, title)
	//line templates/forms.html:26
	qs422016 := string(qb422016.B)
	//line templates/forms.html:26
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/forms.html:26
	return qs422016
//line templates/forms.html:26
}

// BoardNavigation renders a board selection and search form

//line templates/forms.html:29
func StreamBoardNavigation(qw422016 *qt422016.Writer, lang map[string]string) {
	//line templates/forms.html:29
	qw422016.N().S(`
	<input type="text" class="full-width" name="search" placeholder="`)
	//line templates/forms.html:30
	qw422016.N().S(lang["search"])
	//line templates/forms.html:30
	qw422016.N().S(`">
	<br>
	<form>
		<input type="submit" value="`)
	//line templates/forms.html:33
	qw422016.N().S(lang["apply"])
	//line templates/forms.html:33
	qw422016.N().S(`">
		<input type="button" name="cancel" value="`)
	//line templates/forms.html:34
	qw422016.N().S(lang["cancel"])
	//line templates/forms.html:34
	qw422016.N().S(`">
		<br>
		`)
	//line templates/forms.html:36
	for _, b := range config.GetBoardTitles() {
		//line templates/forms.html:36
		qw422016.N().S(`
			<label>
				<input type="checkbox" name="`)
		//line templates/forms.html:38
		qw422016.N().S(b.ID)
		//line templates/forms.html:38
		qw422016.N().S(`">
				<a href="/`)
		//line templates/forms.html:39
		qw422016.N().S(b.ID)
		//line templates/forms.html:39
		qw422016.N().S(`/" class="history">`)
		//line templates/forms.html:39
		streamformatTitle(qw422016, b.ID, b.Title)
		//line templates/forms.html:39
		qw422016.N().S(`</a>
				<br>
			</label>
		`)
		//line templates/forms.html:42
	}
	//line templates/forms.html:42
	qw422016.N().S(`
	</form>
`)
//line templates/forms.html:44
}

//line templates/forms.html:44
func WriteBoardNavigation(qq422016 qtio422016.Writer, lang map[string]string) {
	//line templates/forms.html:44
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/forms.html:44
	StreamBoardNavigation(qw422016, lang)
	//line templates/forms.html:44
	qt422016.ReleaseWriter(qw422016)
//line templates/forms.html:44
}

//line templates/forms.html:44
func BoardNavigation(lang map[string]string) string {
	//line templates/forms.html:44
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/forms.html:44
	WriteBoardNavigation(qb422016, lang)
	//line templates/forms.html:44
	qs422016 := string(qb422016.B)
	//line templates/forms.html:44
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/forms.html:44
	return qs422016
//line templates/forms.html:44
}

// CreateBoard renders a the form for creating new boards

//line templates/forms.html:47
func StreamCreateBoard(qw422016 *qt422016.Writer, ln lang.Pack) {
	//line templates/forms.html:47
	qw422016.N().S(`
	`)
	//line templates/forms.html:48
	qw422016.N().S(renderTable(specs["createBoard"], ln))
	//line templates/forms.html:48
	qw422016.N().S(`
	`)
	//line templates/forms.html:49
	qw422016.N().S(`<input type="submit" value="`)
	//line templates/forms.html:50
	qw422016.N().S(ln.UI["submit"])
	//line templates/forms.html:50
	qw422016.N().S(`"><input type="button" name="cancel" value="`)
	//line templates/forms.html:51
	qw422016.N().S(ln.UI["cancel"])
	//line templates/forms.html:51
	qw422016.N().S(`">`)
	//line templates/forms.html:52
	qw422016.N().S(`
	`)
	//line templates/forms.html:53
	streamcaptcha(qw422016, "create-board", ln.UI)
	//line templates/forms.html:53
	qw422016.N().S(`
	<div class="form-response admin"></div>
`)
//line templates/forms.html:55
}

//line templates/forms.html:55
func WriteCreateBoard(qq422016 qtio422016.Writer, ln lang.Pack) {
	//line templates/forms.html:55
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/forms.html:55
	StreamCreateBoard(qw422016, ln)
	//line templates/forms.html:55
	qt422016.ReleaseWriter(qw422016)
//line templates/forms.html:55
}

//line templates/forms.html:55
func CreateBoard(ln lang.Pack) string {
	//line templates/forms.html:55
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/forms.html:55
	WriteCreateBoard(qb422016, ln)
	//line templates/forms.html:55
	qs422016 := string(qb422016.B)
	//line templates/forms.html:55
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/forms.html:55
	return qs422016
//line templates/forms.html:55
}

//line templates/forms.html:57
func streamcaptcha(qw422016 *qt422016.Writer, id string, lang map[string]string) {
	//line templates/forms.html:57
	qw422016.N().S(`
	`)
	//line templates/forms.html:58
	conf := config.Get()

	//line templates/forms.html:58
	qw422016.N().S(`
	`)
	//line templates/forms.html:59
	if !conf.Captcha {
		//line templates/forms.html:59
		qw422016.N().S(`
		`)
		//line templates/forms.html:60
		return
		//line templates/forms.html:61
	}
	//line templates/forms.html:61
	qw422016.N().S(`
	<div class="captcha-container">
		<div id="adcopy-outer-`)
	//line templates/forms.html:63
	qw422016.N().S(id)
	//line templates/forms.html:63
	qw422016.N().S(`">
			<div id="adcopy-puzzle-image-`)
	//line templates/forms.html:64
	qw422016.N().S(id)
	//line templates/forms.html:64
	qw422016.N().S(`" class="captcha-image" title="`)
	//line templates/forms.html:64
	qw422016.N().S(lang["reloadCaptcha"])
	//line templates/forms.html:64
	qw422016.N().S(`"></div>
			<div id="adcopy-puzzle-audio-`)
	//line templates/forms.html:65
	qw422016.N().S(id)
	//line templates/forms.html:65
	qw422016.N().S(`" class="hidden"></div>
			<div id="adcopy-pixel-image-`)
	//line templates/forms.html:66
	qw422016.N().S(id)
	//line templates/forms.html:66
	qw422016.N().S(`" class="hidden"></div>
			<div>
				<span id="adcopy-instr-`)
	//line templates/forms.html:68
	qw422016.N().S(id)
	//line templates/forms.html:68
	qw422016.N().S(`" class="hidden"></span>
			</div>
			<input id="adcopy_response-`)
	//line templates/forms.html:70
	qw422016.N().S(id)
	//line templates/forms.html:70
	qw422016.N().S(`" name="adcopy_response" class="full-width" type="text" placeholder="`)
	//line templates/forms.html:70
	qw422016.N().S(lang["focusForCaptcha"])
	//line templates/forms.html:70
	qw422016.N().S(`" required>
			<input type="hidden" name="adcopy_challenge" id="adcopy_challenge-`)
	//line templates/forms.html:71
	qw422016.N().S(id)
	//line templates/forms.html:71
	qw422016.N().S(`" hidden>
			<a id="adcopy-link-refresh-`)
	//line templates/forms.html:72
	qw422016.N().S(id)
	//line templates/forms.html:72
	qw422016.N().S(`" class="hidden"></a>
			<a id="adcopy-link-audio-`)
	//line templates/forms.html:73
	qw422016.N().S(id)
	//line templates/forms.html:73
	qw422016.N().S(`" class="hidden"></a>
			<a id="adcopy-link-image-`)
	//line templates/forms.html:74
	qw422016.N().S(id)
	//line templates/forms.html:74
	qw422016.N().S(`" class="hidden"></a>
			<a id="adcopy-link-info-`)
	//line templates/forms.html:75
	qw422016.N().S(id)
	//line templates/forms.html:75
	qw422016.N().S(`" class="hidden"></a>
			<noscript>
				<iframe src="http://api.solvemedia.com/papi/challenge.noscript?k=`)
	//line templates/forms.html:77
	qw422016.N().U(conf.CaptchaPublicKey)
	//line templates/forms.html:77
	qw422016.N().S(`"
		height="260" width="350" frameborder="0"></iframe>
				<br>
				<input name="adcopy_challenge" type="text" required>
			</noscript>
		</div>
	</div>
`)
//line templates/forms.html:84
}

//line templates/forms.html:84
func writecaptcha(qq422016 qtio422016.Writer, id string, lang map[string]string) {
	//line templates/forms.html:84
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/forms.html:84
	streamcaptcha(qw422016, id, lang)
	//line templates/forms.html:84
	qt422016.ReleaseWriter(qw422016)
//line templates/forms.html:84
}

//line templates/forms.html:84
func captcha(id string, lang map[string]string) string {
	//line templates/forms.html:84
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/forms.html:84
	writecaptcha(qb422016, id, lang)
	//line templates/forms.html:84
	qs422016 := string(qb422016.B)
	//line templates/forms.html:84
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/forms.html:84
	return qs422016
//line templates/forms.html:84
}
