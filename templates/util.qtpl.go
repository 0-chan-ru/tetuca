// This file is automatically generated by qtc from "util.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line util.qtpl:1
package templates

//line util.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line util.qtpl:1
import "strconv"

// Renders the tab selection butts in tabbed windows

//line util.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line util.qtpl:4
func streamtabButts(qw422016 *qt422016.Writer, names []string) {
	//line util.qtpl:4
	qw422016.N().S(`<div class="tab-butts">`)
	//line util.qtpl:6
	for i, n := range names {
		//line util.qtpl:6
		qw422016.N().S(`<a class="tab-link`)
		//line util.qtpl:7
		if i == 0 {
			//line util.qtpl:7
			qw422016.N().S(` `)
			//line util.qtpl:7
			qw422016.N().S(`tab-sel`)
			//line util.qtpl:7
		}
		//line util.qtpl:7
		qw422016.N().S(`" data-id="`)
		//line util.qtpl:7
		qw422016.N().D(i)
		//line util.qtpl:7
		qw422016.N().S(`">`)
		//line util.qtpl:8
		qw422016.N().S(n)
		//line util.qtpl:8
		qw422016.N().S(`</a>`)
		//line util.qtpl:10
	}
	//line util.qtpl:10
	qw422016.N().S(`</div><hr>`)
//line util.qtpl:13
}

//line util.qtpl:13
func writetabButts(qq422016 qtio422016.Writer, names []string) {
	//line util.qtpl:13
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line util.qtpl:13
	streamtabButts(qw422016, names)
	//line util.qtpl:13
	qt422016.ReleaseWriter(qw422016)
//line util.qtpl:13
}

//line util.qtpl:13
func tabButts(names []string) string {
	//line util.qtpl:13
	qb422016 := qt422016.AcquireByteBuffer()
	//line util.qtpl:13
	writetabButts(qb422016, names)
	//line util.qtpl:13
	qs422016 := string(qb422016.B)
	//line util.qtpl:13
	qt422016.ReleaseByteBuffer(qb422016)
	//line util.qtpl:13
	return qs422016
//line util.qtpl:13
}

// Render a link to another post. Can optionally be cross-thread.

//line util.qtpl:16
func streampostLink(qw422016 *qt422016.Writer, id, op uint64, board string, cross bool) {
	//line util.qtpl:17
	idStr := strconv.FormatUint(id, 10)

	//line util.qtpl:17
	qw422016.N().S(`<a class="history post-link" data-id="`)
	//line util.qtpl:18
	qw422016.N().S(idStr)
	//line util.qtpl:18
	qw422016.N().S(`" href="`)
	//line util.qtpl:19
	if cross {
		//line util.qtpl:19
		qw422016.N().S(`/`)
		//line util.qtpl:20
		qw422016.N().S(board)
		//line util.qtpl:20
		qw422016.N().S(`/`)
		//line util.qtpl:20
		qw422016.N().S(strconv.FormatUint(op, 10))
		//line util.qtpl:21
	}
	//line util.qtpl:21
	qw422016.N().S(`#p`)
	//line util.qtpl:22
	qw422016.N().S(idStr)
	//line util.qtpl:22
	qw422016.N().S(`">>>`)
	//line util.qtpl:25
	if cross {
		//line util.qtpl:25
		qw422016.N().S(`>/`)
		//line util.qtpl:26
		qw422016.N().S(board)
		//line util.qtpl:26
		qw422016.N().S(`/`)
		//line util.qtpl:27
	}
	//line util.qtpl:28
	qw422016.N().S(idStr)
	//line util.qtpl:28
	qw422016.N().S(`</a><a class="hash-link"> #</a>`)
//line util.qtpl:31
}

//line util.qtpl:31
func writepostLink(qq422016 qtio422016.Writer, id, op uint64, board string, cross bool) {
	//line util.qtpl:31
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line util.qtpl:31
	streampostLink(qw422016, id, op, board, cross)
	//line util.qtpl:31
	qt422016.ReleaseWriter(qw422016)
//line util.qtpl:31
}

//line util.qtpl:31
func postLink(id, op uint64, board string, cross bool) string {
	//line util.qtpl:31
	qb422016 := qt422016.AcquireByteBuffer()
	//line util.qtpl:31
	writepostLink(qb422016, id, op, board, cross)
	//line util.qtpl:31
	qs422016 := string(qb422016.B)
	//line util.qtpl:31
	qt422016.ReleaseByteBuffer(qb422016)
	//line util.qtpl:31
	return qs422016
//line util.qtpl:31
}
