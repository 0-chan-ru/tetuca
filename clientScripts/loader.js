// Selects and loads the client files and polyfills, if any. Use only ES5.

(function () {
	// Check if the client is an automated crawler
	var isBot,
		botStrings = [
			"bot", "googlebot", "crawler", "spider", "robot", "crawling"
		]
	for (var i = 0; i < botStrings.length; i++) {
		if (navigator.userAgent.indexOf(botStrings[i]) !== -1) {
			isBot = true
			break
		}
	}

	// Display mature content warning
	if (!isBot && config.mature && !localStorage.getItem("termsAccepted")) {
		var confirmText =
			"To access this website you understand and agree to the following:\n\n"
			+ "1. The content of this website is for mature audiences only and may not be suitable for minors. If you are a minor or it is illegal for you to access mature images and language, do not proceed.\n\n"
			+ "2. This website is presented to you AS IS, with no warranty, express or implied. By proceeding you agree not to hold the owner(s) of the website responsible for any damages from your use of the website, and you understand that the content posted is not owned or generated by the website, but rather by the website's users."
		if (!confirm(confirmText)) {
			location.href = "http://www.gaiaonline.com/"
			return
		}

		localStorage.setItem("termsAccepted", "true")
	}

	// TODO: Check for WASM support and unbox all noscript tags on failure

	var scriptCount = 0,
		polyfills = []

	// Fetch API
	if (!checkFunction("window.fetch")) {
		polyfills.push('vendor/fetch')
	}

	// Remove prefixes on Web Crypto API for Safari
	if (!checkFunction("window.crypto.subtle.digest")) {
		window.crypto.subtle = window.crypto.webkitSubtle
	}

	var head = document.getElementsByTagName('head')[0]

	if (polyfills.length) {
		for (var i = 0; i < polyfills.length; i++) {
			scriptCount++
			loadScript(polyfills[i]).onload = checkAllLoaded
		}
	} else {
		loadClient()
	}

	// Check if a browser API function is defined
	function checkFunction(func) {
		try {
			return typeof eval(func) === 'function'
		}
		catch (e) {
			return false
		}
	}

	function checkAllLoaded() {
		// This function might be called multiple times. Only load the client,
		// when all polyfills are loaded.
		if (--scriptCount === 0) {
			loadClient()
		}
	}

	function loadScript(path) {
		var script = document.createElement('script')
		script.type = 'text/javascript'
		script.src = '/assets/js/' + path + '.js'
		head.appendChild(script)
		return script
	}

	function loadClient() {
		// Iterable NodeList
		if (!checkFunction('NodeList.prototype[Symbol.iterator]')) {
			NodeList.prototype[Symbol.iterator] =
				Array.prototype[Symbol.iterator]
		}

		window.Module = {}

		fetch("/assets/wasm/main.wasm")
			.then(function (res) {
				return res.arrayBuffer()
			})
			.then(function (bytes) {
				Module.wasmBinary = bytes
				var script = document.createElement('script')
				script.src = "/assets/wasm/main.js"
				document.head.appendChild(script)
			})

		if ('serviceWorker' in navigator) {
			navigator.serviceWorker
				.register("/worker.js")
				.catch(function (err) {
					throw err
				})
		}
	}
})()
